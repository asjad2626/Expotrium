import { Component, ViewEncapsulation } from '@angular/core';
import { BreadcrumbService } from './breadcrumb.service';
import { ICON_MAP } from '../icon/icon.token';
import * as i0 from "@angular/core";
import * as i1 from "./breadcrumb.service";
import * as i2 from "@angular/common";
import * as i3 from "../icon/icon.component";
import * as i4 from "@angular/router";
import * as i5 from "../../directives/click-outside/click-outside.directive";
import * as i6 from "../../pipes/to-observable/to-observable.pipe";
export class BreadcrumbComponent {
    constructor(service) {
        this.service = service;
        this.icon = ICON_MAP;
    }
    onClick(item) {
        if (item.children) {
            item.expanded = !item.expanded;
        }
    }
}
BreadcrumbComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: BreadcrumbComponent, deps: [{ token: i1.BreadcrumbService }], target: i0.ɵɵFactoryTarget.Component });
BreadcrumbComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.0", type: BreadcrumbComponent, selector: "lpx-breadcrumb", ngImport: i0, template: "<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"lpx-breadcrumb\">\r\n    <ng-container *ngFor=\"let item of service.items$ | async; last as last\">\r\n      <li\r\n        class=\"lpx-breadcrumb-item\"\r\n        (click)=\"onClick(item)\"\r\n        [class.expanded]=\"item.expanded\"\r\n        (lpxClickOutside)=\"item.expanded = false\"\r\n      >\r\n        <lpx-icon\r\n          class=\"lpx-breadcrumb-item-icon\"\r\n          *ngIf=\"item.icon\"\r\n          [iconClass]=\"item.icon\"\r\n        ></lpx-icon>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            item.children?.length ? textTemplate : linkTemplate;\r\n            context: { $implicit: item }\r\n          \"\r\n        ></ng-container>\r\n        <ng-container *ngIf=\"item.children?.length && last\">\r\n          <lpx-icon\r\n            class=\"lpx-caret\"\r\n            [iconClass]=\"item.expanded ? icon.chevronUp : icon.chevronDown\"\r\n          ></lpx-icon>\r\n          <div class=\"lpx-breadcrumb-dropdown\">\r\n            <ul class=\"lpx-breadcrumb-dropdown-container\">\r\n              <li\r\n                class=\"lpx-breadcrumb-dropdown-item\"\r\n                *ngFor=\"let child of item.children\"\r\n                [class.active]=\"child.active\"\r\n                [routerLink]=\"child.link\"\r\n              >\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"\r\n                    textTemplate;\r\n                    context: { $implicit: child }\r\n                  \"\r\n                ></ng-container>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </ng-container>\r\n      </li>\r\n      <li *ngIf=\"!last\" class=\"lpx-breadcrumb-separator\">\r\n        <lpx-icon iconClass=\"bi bi-chevron-right\"></lpx-icon>\r\n      </li>\r\n    </ng-container>\r\n  </ol>\r\n</nav>\r\n\r\n<ng-template #linkTemplate let-item>\r\n  <a [routerLink]=\"item.link\"> {{ item.text | toObservable | async }} </a>\r\n</ng-template>\r\n<ng-template #textTemplate let-item>\r\n  <span class=\"lpx-breadcrumb-item-text\">\r\n    {{ item.text | toObservable | async }}\r\n  </span>\r\n</ng-template>\r\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3.IconComponent, selector: "lpx-icon", inputs: ["iconClass"] }, { kind: "directive", type: i4.RouterLink, selector: ":not(a):not(area)[routerLink]", inputs: ["queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i4.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i5.ClickOutsideDirective, selector: "[lpxClickOutside]", inputs: ["exceptedRefs"], outputs: ["lpxClickOutside"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.ToObservablePipe, name: "toObservable" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: BreadcrumbComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lpx-breadcrumb', encapsulation: ViewEncapsulation.None, template: "<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"lpx-breadcrumb\">\r\n    <ng-container *ngFor=\"let item of service.items$ | async; last as last\">\r\n      <li\r\n        class=\"lpx-breadcrumb-item\"\r\n        (click)=\"onClick(item)\"\r\n        [class.expanded]=\"item.expanded\"\r\n        (lpxClickOutside)=\"item.expanded = false\"\r\n      >\r\n        <lpx-icon\r\n          class=\"lpx-breadcrumb-item-icon\"\r\n          *ngIf=\"item.icon\"\r\n          [iconClass]=\"item.icon\"\r\n        ></lpx-icon>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            item.children?.length ? textTemplate : linkTemplate;\r\n            context: { $implicit: item }\r\n          \"\r\n        ></ng-container>\r\n        <ng-container *ngIf=\"item.children?.length && last\">\r\n          <lpx-icon\r\n            class=\"lpx-caret\"\r\n            [iconClass]=\"item.expanded ? icon.chevronUp : icon.chevronDown\"\r\n          ></lpx-icon>\r\n          <div class=\"lpx-breadcrumb-dropdown\">\r\n            <ul class=\"lpx-breadcrumb-dropdown-container\">\r\n              <li\r\n                class=\"lpx-breadcrumb-dropdown-item\"\r\n                *ngFor=\"let child of item.children\"\r\n                [class.active]=\"child.active\"\r\n                [routerLink]=\"child.link\"\r\n              >\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"\r\n                    textTemplate;\r\n                    context: { $implicit: child }\r\n                  \"\r\n                ></ng-container>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </ng-container>\r\n      </li>\r\n      <li *ngIf=\"!last\" class=\"lpx-breadcrumb-separator\">\r\n        <lpx-icon iconClass=\"bi bi-chevron-right\"></lpx-icon>\r\n      </li>\r\n    </ng-container>\r\n  </ol>\r\n</nav>\r\n\r\n<ng-template #linkTemplate let-item>\r\n  <a [routerLink]=\"item.link\"> {{ item.text | toObservable | async }} </a>\r\n</ng-template>\r\n<ng-template #textTemplate let-item>\r\n  <span class=\"lpx-breadcrumb-item-text\">\r\n    {{ item.text | toObservable | async }}\r\n  </span>\r\n</ng-template>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.BreadcrumbService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2xlcHRvbi14LWNvcmUvc3JjL2xpYi9jb21wb25lbnRzL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2xlcHRvbi14LWNvcmUvc3JjL2xpYi9jb21wb25lbnRzL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBa0IsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7Ozs7O0FBTzlDLE1BQU0sT0FBTyxtQkFBbUI7SUFHOUIsWUFBbUIsT0FBMEI7UUFBMUIsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFGN0MsU0FBSSxHQUFHLFFBQVEsQ0FBQztJQUVnQyxDQUFDO0lBRWpELE9BQU8sQ0FBQyxJQUFvQjtRQUMxQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDaEM7SUFDSCxDQUFDOztnSEFUVSxtQkFBbUI7b0dBQW5CLG1CQUFtQixzRENUaEMsc25FQTJEQTsyRkRsRGEsbUJBQW1CO2tCQUwvQixTQUFTOytCQUNFLGdCQUFnQixpQkFFWCxpQkFBaUIsQ0FBQyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCcmVhZGNydW1iSXRlbSwgQnJlYWRjcnVtYlNlcnZpY2UgfSBmcm9tICcuL2JyZWFkY3J1bWIuc2VydmljZSc7XHJcbmltcG9ydCB7IElDT05fTUFQIH0gZnJvbSAnLi4vaWNvbi9pY29uLnRva2VuJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbHB4LWJyZWFkY3J1bWInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9icmVhZGNydW1iLmNvbXBvbmVudC5odG1sJyxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQnJlYWRjcnVtYkNvbXBvbmVudCB7XHJcbiAgaWNvbiA9IElDT05fTUFQO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogQnJlYWRjcnVtYlNlcnZpY2UpIHt9XHJcblxyXG4gIG9uQ2xpY2soaXRlbTogQnJlYWRjcnVtYkl0ZW0pOiB2b2lkIHtcclxuICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7XHJcbiAgICAgIGl0ZW0uZXhwYW5kZWQgPSAhaXRlbS5leHBhbmRlZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFRPRE86IGNsb3NlIGRyb3Bkb3duIHdoZW4gY2xpY2sgb3V0c2lkZVxyXG59XHJcbiIsIjxuYXYgYXJpYS1sYWJlbD1cImJyZWFkY3J1bWJcIj5cclxuICA8b2wgY2xhc3M9XCJscHgtYnJlYWRjcnVtYlwiPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBzZXJ2aWNlLml0ZW1zJCB8IGFzeW5jOyBsYXN0IGFzIGxhc3RcIj5cclxuICAgICAgPGxpXHJcbiAgICAgICAgY2xhc3M9XCJscHgtYnJlYWRjcnVtYi1pdGVtXCJcclxuICAgICAgICAoY2xpY2spPVwib25DbGljayhpdGVtKVwiXHJcbiAgICAgICAgW2NsYXNzLmV4cGFuZGVkXT1cIml0ZW0uZXhwYW5kZWRcIlxyXG4gICAgICAgIChscHhDbGlja091dHNpZGUpPVwiaXRlbS5leHBhbmRlZCA9IGZhbHNlXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxscHgtaWNvblxyXG4gICAgICAgICAgY2xhc3M9XCJscHgtYnJlYWRjcnVtYi1pdGVtLWljb25cIlxyXG4gICAgICAgICAgKm5nSWY9XCJpdGVtLmljb25cIlxyXG4gICAgICAgICAgW2ljb25DbGFzc109XCJpdGVtLmljb25cIlxyXG4gICAgICAgID48L2xweC1pY29uPlxyXG4gICAgICAgIDxuZy1jb250YWluZXJcclxuICAgICAgICAgICpuZ1RlbXBsYXRlT3V0bGV0PVwiXHJcbiAgICAgICAgICAgIGl0ZW0uY2hpbGRyZW4/Lmxlbmd0aCA/IHRleHRUZW1wbGF0ZSA6IGxpbmtUZW1wbGF0ZTtcclxuICAgICAgICAgICAgY29udGV4dDogeyAkaW1wbGljaXQ6IGl0ZW0gfVxyXG4gICAgICAgICAgXCJcclxuICAgICAgICA+PC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIml0ZW0uY2hpbGRyZW4/Lmxlbmd0aCAmJiBsYXN0XCI+XHJcbiAgICAgICAgICA8bHB4LWljb25cclxuICAgICAgICAgICAgY2xhc3M9XCJscHgtY2FyZXRcIlxyXG4gICAgICAgICAgICBbaWNvbkNsYXNzXT1cIml0ZW0uZXhwYW5kZWQgPyBpY29uLmNoZXZyb25VcCA6IGljb24uY2hldnJvbkRvd25cIlxyXG4gICAgICAgICAgPjwvbHB4LWljb24+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibHB4LWJyZWFkY3J1bWItZHJvcGRvd25cIj5cclxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibHB4LWJyZWFkY3J1bWItZHJvcGRvd24tY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImxweC1icmVhZGNydW1iLWRyb3Bkb3duLWl0ZW1cIlxyXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGNoaWxkIG9mIGl0ZW0uY2hpbGRyZW5cIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLmFjdGl2ZV09XCJjaGlsZC5hY3RpdmVcIlxyXG4gICAgICAgICAgICAgICAgW3JvdXRlckxpbmtdPVwiY2hpbGQubGlua1wiXHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lclxyXG4gICAgICAgICAgICAgICAgICAqbmdUZW1wbGF0ZU91dGxldD1cIlxyXG4gICAgICAgICAgICAgICAgICAgIHRleHRUZW1wbGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiB7ICRpbXBsaWNpdDogY2hpbGQgfVxyXG4gICAgICAgICAgICAgICAgICBcIlxyXG4gICAgICAgICAgICAgICAgPjwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgPC9saT5cclxuICAgICAgPGxpICpuZ0lmPVwiIWxhc3RcIiBjbGFzcz1cImxweC1icmVhZGNydW1iLXNlcGFyYXRvclwiPlxyXG4gICAgICAgIDxscHgtaWNvbiBpY29uQ2xhc3M9XCJiaSBiaS1jaGV2cm9uLXJpZ2h0XCI+PC9scHgtaWNvbj5cclxuICAgICAgPC9saT5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gIDwvb2w+XHJcbjwvbmF2PlxyXG5cclxuPG5nLXRlbXBsYXRlICNsaW5rVGVtcGxhdGUgbGV0LWl0ZW0+XHJcbiAgPGEgW3JvdXRlckxpbmtdPVwiaXRlbS5saW5rXCI+IHt7IGl0ZW0udGV4dCB8IHRvT2JzZXJ2YWJsZSB8IGFzeW5jIH19IDwvYT5cclxuPC9uZy10ZW1wbGF0ZT5cclxuPG5nLXRlbXBsYXRlICN0ZXh0VGVtcGxhdGUgbGV0LWl0ZW0+XHJcbiAgPHNwYW4gY2xhc3M9XCJscHgtYnJlYWRjcnVtYi1pdGVtLXRleHRcIj5cclxuICAgIHt7IGl0ZW0udGV4dCB8IHRvT2JzZXJ2YWJsZSB8IGFzeW5jIH19XHJcbiAgPC9zcGFuPlxyXG48L25nLXRlbXBsYXRlPlxyXG4iXX0=
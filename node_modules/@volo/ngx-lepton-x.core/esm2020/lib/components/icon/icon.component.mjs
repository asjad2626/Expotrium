import { Component, Inject, Input, ViewEncapsulation } from '@angular/core';
import { LEPTON_X_ICON_SET } from './icon.token';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class IconComponent {
    constructor(iconSet) {
        this.iconSet = iconSet;
    }
    get styleClass() {
        return this.iconSet[this.iconClass] || this.iconClass;
    }
}
IconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: IconComponent, deps: [{ token: LEPTON_X_ICON_SET }], target: i0.ɵɵFactoryTarget.Component });
IconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.0", type: IconComponent, selector: "lpx-icon", inputs: { iconClass: "iconClass" }, ngImport: i0, template: ` <i class="lpx-icon" [ngClass]="styleClass" aria-hidden="true"></i> `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lpx-icon',
                    template: ` <i class="lpx-icon" [ngClass]="styleClass" aria-hidden="true"></i> `,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [LEPTON_X_ICON_SET]
                }] }]; }, propDecorators: { iconClass: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2xlcHRvbi14LWNvcmUvc3JjL2xpYi9jb21wb25lbnRzL2ljb24vaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSxpQkFBaUIsRUFBaUIsTUFBTSxjQUFjLENBQUM7OztBQU9oRSxNQUFNLE9BQU8sYUFBYTtJQU94QixZQUE4QyxPQUFzQjtRQUF0QixZQUFPLEdBQVAsT0FBTyxDQUFlO0lBQUcsQ0FBQztJQUp4RSxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQWdDLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQy9FLENBQUM7OzBHQUxVLGFBQWEsa0JBT0osaUJBQWlCOzhGQVAxQixhQUFhLG9GQUhkLHNFQUFzRTsyRkFHckUsYUFBYTtrQkFMekIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsVUFBVTtvQkFDcEIsUUFBUSxFQUFFLHNFQUFzRTtvQkFDaEYsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzswQkFRYyxNQUFNOzJCQUFDLGlCQUFpQjs0Q0FONUIsU0FBUztzQkFBakIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTEVQVE9OX1hfSUNPTl9TRVQsIElDT05fTUFQX1RZUEUgfSBmcm9tICcuL2ljb24udG9rZW4nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdscHgtaWNvbicsXHJcbiAgdGVtcGxhdGU6IGAgPGkgY2xhc3M9XCJscHgtaWNvblwiIFtuZ0NsYXNzXT1cInN0eWxlQ2xhc3NcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+IGAsXHJcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEljb25Db21wb25lbnQge1xyXG4gIEBJbnB1dCgpIGljb25DbGFzcyE6IGtleW9mIElDT05fTUFQX1RZUEUgfCBzdHJpbmc7XHJcblxyXG4gIGdldCBzdHlsZUNsYXNzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaWNvblNldFt0aGlzLmljb25DbGFzcyBhcyBrZXlvZiBJQ09OX01BUF9UWVBFXSB8fCB0aGlzLmljb25DbGFzcztcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoTEVQVE9OX1hfSUNPTl9TRVQpIHB1YmxpYyBpY29uU2V0OiBJQ09OX01BUF9UWVBFKSB7fVxyXG59XHJcbiJdfQ==
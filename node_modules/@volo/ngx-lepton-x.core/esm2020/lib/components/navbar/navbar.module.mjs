import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { LpxBrandLogoModule } from '../brand-logo/brand-logo.module';
import { LpxIconModule } from '../icon/icon.module';
import { NavbarComponent } from './navbar.component';
import { SubNavbarComponent } from './sub-navbar/sub-navbar.component';
import { NavbarRoutesComponent } from './navbar-routes/navbar-routes.component';
import { NavbarRoutesDirective } from './navbar-routes/navbar-routes.directive';
import { CONTENT_AFTER_ROUTES, CONTENT_BEFORE_ROUTES, LPX_MENU_ITEMS, } from './navbar.token';
import { ToObservableModule } from '../../pipes/to-observable/to-observable.module';
import { LpxTranslateModule } from '../../pipes';
import * as i0 from "@angular/core";
const exportedDeclarations = [
    NavbarComponent,
    SubNavbarComponent,
    NavbarRoutesComponent,
    NavbarRoutesDirective,
];
export class LpxNavbarModule {
    static forRoot(options = {}) {
        return {
            ngModule: LpxNavbarModule,
            providers: [
                {
                    provide: LPX_MENU_ITEMS,
                    useValue: options?.menuItems || [],
                },
                {
                    provide: CONTENT_AFTER_ROUTES,
                    useValue: options?.contentAfterRoutes || [],
                    multi: true,
                },
                {
                    provide: CONTENT_BEFORE_ROUTES,
                    useValue: options?.contentBeforeRoutes || [],
                    multi: true,
                },
            ],
        };
    }
    static forChild(options = {}) {
        return {
            ngModule: LpxNavbarModule,
            providers: [
                {
                    provide: CONTENT_AFTER_ROUTES,
                    useValue: options?.contentAfterRoutes || [],
                    multi: true,
                },
                {
                    provide: CONTENT_BEFORE_ROUTES,
                    useValue: options?.contentBeforeRoutes || [],
                    multi: true,
                },
            ],
        };
    }
}
LpxNavbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxNavbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LpxNavbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.0", ngImport: i0, type: LpxNavbarModule, declarations: [NavbarComponent,
        SubNavbarComponent,
        NavbarRoutesComponent,
        NavbarRoutesDirective], imports: [CommonModule,
        FormsModule,
        RouterModule,
        LpxBrandLogoModule,
        LpxIconModule,
        ToObservableModule,
        LpxTranslateModule], exports: [NavbarComponent,
        SubNavbarComponent,
        NavbarRoutesComponent,
        NavbarRoutesDirective] });
LpxNavbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxNavbarModule, imports: [CommonModule,
        FormsModule,
        RouterModule,
        LpxBrandLogoModule,
        LpxIconModule,
        ToObservableModule,
        LpxTranslateModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxNavbarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...exportedDeclarations],
                    imports: [
                        CommonModule,
                        FormsModule,
                        RouterModule,
                        LpxBrandLogoModule,
                        LpxIconModule,
                        ToObservableModule,
                        LpxTranslateModule
                    ],
                    exports: [...exportedDeclarations],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbGVwdG9uLXgtY29yZS9zcmMvbGliL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDckUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUVoRixPQUFPLEVBQ0wsb0JBQW9CLEVBQ3BCLHFCQUFxQixFQUNyQixjQUFjLEdBQ2YsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7O0FBRWpELE1BQU0sb0JBQW9CLEdBQUc7SUFDM0IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIscUJBQXFCO0NBQ3RCLENBQUM7QUFxQkYsTUFBTSxPQUFPLGVBQWU7SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FDWixVQUE2QixFQUFFO1FBRS9CLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGNBQWM7b0JBQ3ZCLFFBQVEsRUFBRSxPQUFPLEVBQUUsU0FBUyxJQUFJLEVBQUU7aUJBQ25DO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxvQkFBb0I7b0JBQzdCLFFBQVEsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLElBQUksRUFBRTtvQkFDM0MsS0FBSyxFQUFFLElBQUk7aUJBQ1o7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLHFCQUFxQjtvQkFDOUIsUUFBUSxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsSUFBSSxFQUFFO29CQUM1QyxLQUFLLEVBQUUsSUFBSTtpQkFDWjthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUNiLFVBQWdELEVBQUU7UUFFbEQsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsb0JBQW9CO29CQUM3QixRQUFRLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixJQUFJLEVBQUU7b0JBQzNDLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxxQkFBcUI7b0JBQzlCLFFBQVEsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLElBQUksRUFBRTtvQkFDNUMsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs0R0EzQ1UsZUFBZTs2R0FBZixlQUFlLGlCQXpCMUIsZUFBZTtRQUNmLGtCQUFrQjtRQUNsQixxQkFBcUI7UUFDckIscUJBQXFCLGFBWW5CLFlBQVk7UUFDWixXQUFXO1FBQ1gsWUFBWTtRQUNaLGtCQUFrQjtRQUNsQixhQUFhO1FBQ2Isa0JBQWtCO1FBQ2xCLGtCQUFrQixhQXJCcEIsZUFBZTtRQUNmLGtCQUFrQjtRQUNsQixxQkFBcUI7UUFDckIscUJBQXFCOzZHQXNCVixlQUFlLFlBVnhCLFlBQVk7UUFDWixXQUFXO1FBQ1gsWUFBWTtRQUNaLGtCQUFrQjtRQUNsQixhQUFhO1FBQ2Isa0JBQWtCO1FBQ2xCLGtCQUFrQjsyRkFJVCxlQUFlO2tCQWIzQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsb0JBQW9CLENBQUM7b0JBQ3ZDLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsWUFBWTt3QkFDWixrQkFBa0I7d0JBQ2xCLGFBQWE7d0JBQ2Isa0JBQWtCO3dCQUNsQixrQkFBa0I7cUJBQ25CO29CQUNELE9BQU8sRUFBRSxDQUFDLEdBQUcsb0JBQW9CLENBQUM7aUJBQ25DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IExweEJyYW5kTG9nb01vZHVsZSB9IGZyb20gJy4uL2JyYW5kLWxvZ28vYnJhbmQtbG9nby5tb2R1bGUnO1xyXG5pbXBvcnQgeyBMcHhJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9pY29uLm1vZHVsZSc7XHJcbmltcG9ydCB7IE5hdmJhckNvbXBvbmVudCB9IGZyb20gJy4vbmF2YmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFN1Yk5hdmJhckNvbXBvbmVudCB9IGZyb20gJy4vc3ViLW5hdmJhci9zdWItbmF2YmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5hdmJhclJvdXRlc0NvbXBvbmVudCB9IGZyb20gJy4vbmF2YmFyLXJvdXRlcy9uYXZiYXItcm91dGVzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5hdmJhclJvdXRlc0RpcmVjdGl2ZSB9IGZyb20gJy4vbmF2YmFyLXJvdXRlcy9uYXZiYXItcm91dGVzLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IExweE5hdmJhckl0ZW0gfSBmcm9tICcuL21vZGVscyc7XHJcbmltcG9ydCB7XHJcbiAgQ09OVEVOVF9BRlRFUl9ST1VURVMsXHJcbiAgQ09OVEVOVF9CRUZPUkVfUk9VVEVTLFxyXG4gIExQWF9NRU5VX0lURU1TLFxyXG59IGZyb20gJy4vbmF2YmFyLnRva2VuJztcclxuaW1wb3J0IHsgVG9PYnNlcnZhYmxlTW9kdWxlIH0gZnJvbSAnLi4vLi4vcGlwZXMvdG8tb2JzZXJ2YWJsZS90by1vYnNlcnZhYmxlLm1vZHVsZSc7XHJcbmltcG9ydCB7IExweFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJy4uLy4uL3BpcGVzJztcclxuXHJcbmNvbnN0IGV4cG9ydGVkRGVjbGFyYXRpb25zID0gW1xyXG4gIE5hdmJhckNvbXBvbmVudCxcclxuICBTdWJOYXZiYXJDb21wb25lbnQsXHJcbiAgTmF2YmFyUm91dGVzQ29tcG9uZW50LFxyXG4gIE5hdmJhclJvdXRlc0RpcmVjdGl2ZSxcclxuXTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTHB4TmF2YmFyU2V0dGluZ3Mge1xyXG4gIG1lbnVJdGVtcz86IExweE5hdmJhckl0ZW1bXTtcclxuICBjb250ZW50QWZ0ZXJSb3V0ZXM/OiBUeXBlPGFueT5bXTtcclxuICBjb250ZW50QmVmb3JlUm91dGVzPzogVHlwZTxhbnk+W107XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbLi4uZXhwb3J0ZWREZWNsYXJhdGlvbnNdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUm91dGVyTW9kdWxlLFxyXG4gICAgTHB4QnJhbmRMb2dvTW9kdWxlLFxyXG4gICAgTHB4SWNvbk1vZHVsZSxcclxuICAgIFRvT2JzZXJ2YWJsZU1vZHVsZSxcclxuICAgIExweFRyYW5zbGF0ZU1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogWy4uLmV4cG9ydGVkRGVjbGFyYXRpb25zXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIExweE5hdmJhck1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoXHJcbiAgICBvcHRpb25zOiBMcHhOYXZiYXJTZXR0aW5ncyA9IHt9XHJcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxMcHhOYXZiYXJNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBMcHhOYXZiYXJNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IExQWF9NRU5VX0lURU1TLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbnM/Lm1lbnVJdGVtcyB8fCBbXSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IENPTlRFTlRfQUZURVJfUk9VVEVTLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbnM/LmNvbnRlbnRBZnRlclJvdXRlcyB8fCBbXSxcclxuICAgICAgICAgIG11bHRpOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogQ09OVEVOVF9CRUZPUkVfUk9VVEVTLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbnM/LmNvbnRlbnRCZWZvcmVSb3V0ZXMgfHwgW10sXHJcbiAgICAgICAgICBtdWx0aTogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBmb3JDaGlsZChcclxuICAgIG9wdGlvbnM6IE9taXQ8THB4TmF2YmFyU2V0dGluZ3MsICdtZW51SXRlbXMnPiA9IHt9XHJcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxMcHhOYXZiYXJNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBMcHhOYXZiYXJNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IENPTlRFTlRfQUZURVJfUk9VVEVTLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbnM/LmNvbnRlbnRBZnRlclJvdXRlcyB8fCBbXSxcclxuICAgICAgICAgIG11bHRpOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogQ09OVEVOVF9CRUZPUkVfUk9VVEVTLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbnM/LmNvbnRlbnRCZWZvcmVSb3V0ZXMgfHwgW10sXHJcbiAgICAgICAgICBtdWx0aTogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19
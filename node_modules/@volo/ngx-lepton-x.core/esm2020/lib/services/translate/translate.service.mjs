import { Inject, Injectable, Optional } from '@angular/core';
import { LPX_TRANSLATE_SERVICE_TOKEN, LPX_TRANSLATE_TOKEN } from './tokens';
import { flatArrayDeepToObject } from '../../utils/common';
import * as i0 from "@angular/core";
export class LpxThemeTranslateService {
    constructor(translateValues, translateService) {
        this.translateValues = translateValues;
        this.translateService = translateService;
        this._content = flatArrayDeepToObject(this.translateValues);
    }
    // TODO: PROVIDE API : Implement args
    translate$(key, ...args) {
        return this.translateService.get$(key, this._content[key]);
    }
}
LpxThemeTranslateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxThemeTranslateService, deps: [{ token: LPX_TRANSLATE_TOKEN, optional: true }, { token: LPX_TRANSLATE_SERVICE_TOKEN }], target: i0.ɵɵFactoryTarget.Injectable });
LpxThemeTranslateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxThemeTranslateService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxThemeTranslateService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: Array, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [LPX_TRANSLATE_TOKEN]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [LPX_TRANSLATE_SERVICE_TOKEN]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2xlcHRvbi14LWNvcmUvc3JjL2xpYi9zZXJ2aWNlcy90cmFuc2xhdGUvdHJhbnNsYXRlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTdELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUU1RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFLM0QsTUFBTSxPQUFPLHdCQUF3QjtJQUVuQyxZQUdVLGVBQXNDLEVBRXRDLGdCQUFrQztRQUZsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBdUI7UUFFdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQU5wQyxhQUFRLEdBQWlCLHFCQUFxQixDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQU8xRSxDQUFDO0lBRUoscUNBQXFDO0lBQ3JDLFVBQVUsQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFXO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O3FIQWJVLHdCQUF3QixrQkFJekIsbUJBQW1CLDZCQUVuQiwyQkFBMkI7eUhBTjFCLHdCQUF3QixjQUZ2QixNQUFNOzJGQUVQLHdCQUF3QjtrQkFIcEMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7MERBTTRCLEtBQUs7MEJBRjdCLFFBQVE7OzBCQUNSLE1BQU07MkJBQUMsbUJBQW1COzswQkFFMUIsTUFBTTsyQkFBQywyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgTFBYX1RSQU5TTEFURV9TRVJWSUNFX1RPS0VOLCBMUFhfVFJBTlNMQVRFX1RPS0VOIH0gZnJvbSAnLi90b2tlbnMnO1xyXG5pbXBvcnQgeyBMcHhUcmFuc2xhdGUsIFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICcuL21vZGVscyc7XHJcbmltcG9ydCB7IGZsYXRBcnJheURlZXBUb09iamVjdCB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbW1vbic7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTHB4VGhlbWVUcmFuc2xhdGVTZXJ2aWNlIHtcclxuICBwcml2YXRlIF9jb250ZW50OiBMcHhUcmFuc2xhdGUgPSBmbGF0QXJyYXlEZWVwVG9PYmplY3QodGhpcy50cmFuc2xhdGVWYWx1ZXMpO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQE9wdGlvbmFsKClcclxuICAgIEBJbmplY3QoTFBYX1RSQU5TTEFURV9UT0tFTilcclxuICAgIHByaXZhdGUgdHJhbnNsYXRlVmFsdWVzOiBBcnJheTxMcHhUcmFuc2xhdGVbXT4sXHJcbiAgICBASW5qZWN0KExQWF9UUkFOU0xBVEVfU0VSVklDRV9UT0tFTilcclxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZVxyXG4gICkge31cclxuXHJcbiAgLy8gVE9ETzogUFJPVklERSBBUEkgOiBJbXBsZW1lbnQgYXJnc1xyXG4gIHRyYW5zbGF0ZSQoa2V5OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcclxuICAgIHJldHVybiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuZ2V0JChrZXksIHRoaXMuX2NvbnRlbnRba2V5XSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
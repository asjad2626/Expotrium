import { DataStore } from '../../utils/data-store';
import { LpxNavbarItem } from '../../components/navbar/models';
import { LpxLanguage, LpxLanguageState } from './models';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class LanguageService {
    private languages;
    readonly store: DataStore<LpxLanguageState>;
    id: string;
    convertLanguageToNavbarItem: (languages: LpxLanguage[]) => LpxNavbarItem[];
    selectedLanguage$: Observable<LpxLanguage | undefined>;
    get selectedLanguage(): LpxLanguage;
    languageChange$: Observable<LpxLanguage>;
    languages$: Observable<LpxLanguage[]>;
    languagesAsNavbarItems$: Observable<LpxNavbarItem[]>;
    languagesAsSettingsGroup$: Observable<{
        text: string;
        icon: string;
        id: string;
        children: LpxNavbarItem[];
    }>;
    constructor(languages: LpxLanguage[]);
    setLanguages(languages: LpxLanguage[]): void;
    init(languages: LpxLanguage[]): void;
    setSelectedLanguage(lang: LpxLanguage): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LanguageService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LanguageService>;
}

{"version":3,"file":"volo-abp.ng.lepton-x.core.mjs","sources":["../../../../libs/lepton-x-abp-core/src/lib/tokens/mobile-navbar-items-filter.token.ts","../../../../libs/lepton-x-abp-core/src/lib/providers/mobile-navbar-items-filter.provider.ts","../../../../libs/lepton-x-abp-core/src/lib/services/document-dir.service.ts","../../../../libs/lepton-x-abp-core/src/lib/providers/document-dir.provider.ts","../../../../libs/lepton-x-abp-core/src/lib/directives/if-replaceable-template-exists.directive.ts","../../../../libs/lepton-x-abp-core/src/lib/components/page-alert-container/page-alert-container.component.ts","../../../../libs/lepton-x-abp-core/src/lib/components/page-alert-container/page-alert-container.component.html","../../../../libs/lepton-x-abp-core/src/lib/components/page-alert-container/page-alert-container.module.ts","../../../../libs/lepton-x-abp-core/src/lib/lepton-x-abp-core.module.ts","../../../../libs/lepton-x-abp-core/src/lib/services/abp-navbar.service.ts","../../../../libs/lepton-x-abp-core/src/volo-abp.ng.lepton-x.core.ts"],"sourcesContent":["import { ABP, TreeNode } from '@abp/ng.core';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport type MobileMenuItemFilterFn = (\r\n  route: TreeNode<ABP.Route>,\r\n  index: number\r\n) => boolean;\r\nexport const MOBILE_NAVBAR_ITEMS_FILTER_TOKEN =\r\n  new InjectionToken<MobileMenuItemFilterFn>(\r\n    'MOBILE_NAVBAR_ITEMS_FILTER_TOKEN'\r\n  );\r\n","import { MOBILE_NAVBAR_ITEMS_FILTER_TOKEN } from './../tokens/mobile-navbar-items-filter.token';\r\nimport { ABP, TreeNode } from '@abp/ng.core';\r\nimport { MobileMenuItemFilterFn } from '../tokens/mobile-navbar-items-filter.token';\r\n\r\nexport const MOBILE_NAVBAR_ITEMS_FILTER_PROVIDER = {\r\n  provide: MOBILE_NAVBAR_ITEMS_FILTER_TOKEN,\r\n  deps: [],\r\n  useFactory: mobileMenuItemFilterFnFactory\r\n}\r\n\r\nexport function mobileMenuItemFilterFnFactory() :MobileMenuItemFilterFn {\r\n  return (route: TreeNode<ABP.Route>,\r\n    index: number) => {\r\n    return index === 0 || index === 1\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DocumentDirHandlerService } from '@abp/ng.theme.shared';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DocumentDirService {\r\n  constructor(\r\n    private documentDirHandler: DocumentDirHandlerService,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {}\r\n\r\n  listenDir() {\r\n    this.documentDirHandler.dir$.subscribe((dir) => {\r\n      this.document.documentElement.dir = dir;\r\n    });\r\n  }\r\n}\r\n","import { APP_INITIALIZER } from '@angular/core';\r\nimport { DocumentDirService } from '../services/document-dir.service';\r\n\r\nexport const DOCUMENT_DIR_PROVIDER = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  deps: [DocumentDirService],\r\n  useFactory: listenDirectionChangeFromAbp\r\n}\r\n\r\nexport function listenDirectionChangeFromAbp(documentDirService: DocumentDirService) {\r\n  return () => {\r\n    documentDirService.listenDir();\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ReplaceableComponentsService } from '@abp/ng.core';\r\n\r\n@Directive({\r\n  selector: '[abpIfReplaceableTemplateExists]',\r\n})\r\nexport class IfReplaceableTemplateExistsDirective implements AfterViewInit {\r\n  @Input()\r\n  abpIfReplaceableTemplateExists: string;\r\n\r\n  constructor(\r\n    private view: ViewContainerRef,\r\n    private template: TemplateRef<any>,\r\n    private replaceableComponentsService: ReplaceableComponentsService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const replaceableComponentInstance = this.replaceableComponentsService.get(\r\n      this.abpIfReplaceableTemplateExists\r\n    );\r\n    const isReplaceableComponentInstanceNotExits = !replaceableComponentInstance;\r\n    if (isReplaceableComponentInstanceNotExits) {\r\n      return;\r\n    }\r\n    this.view.createEmbeddedView(this.template);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { PageAlertService } from '@abp/ng.theme.shared';\r\n\r\n@Component({\r\n  selector: 'abp-page-alert-container',\r\n  templateUrl: './page-alert-container.component.html',\r\n})\r\nexport class PageAlertContainerComponent {\r\n  replaceableTemplateKey = {\r\n    componentKey: 'Theme.PageAlertContainerComponent',\r\n  };\r\n\r\n  constructor(public service: PageAlertService) {}\r\n}\r\n","<ng-container *abpReplaceableTemplate=\"replaceableTemplateKey\">\r\n  <ng-container *ngFor=\"let alert of service.alerts$ | async; let i = index\">\r\n    <div\r\n      class=\"alert alert-{{ alert.type }} fade show\"\r\n      [ngClass]=\"{ 'alert-dismissible fade show': alert.dismissible }\"\r\n      role=\"alert\"\r\n    >\r\n      <h4 class=\"alert-heading\" *ngIf=\"alert.title\">\r\n        {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\r\n      </h4>\r\n      {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\r\n      <button\r\n        *ngIf=\"alert.dismissible\"\r\n        type=\"button\"\r\n        class=\"btn-close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        (click)=\"service.remove(i)\"\r\n      ></button>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { PageAlertContainerComponent } from './page-alert-container.component';\r\n\r\n@NgModule({\r\n  declarations: [PageAlertContainerComponent],\r\n  imports: [ThemeSharedModule, CoreModule],\r\n  exports: [PageAlertContainerComponent],\r\n})\r\nexport class PageAlertContainerModule {}\r\n","import { MOBILE_NAVBAR_ITEMS_FILTER_PROVIDER } from './providers/mobile-navbar-items-filter.provider';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DOCUMENT_DIR_PROVIDER } from './providers/document-dir.provider';\r\nimport { IfReplaceableTemplateExistsDirective } from './directives/if-replaceable-template-exists.directive';\r\nimport { PageAlertContainerModule } from './components/page-alert-container/page-alert-container.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageAlertContainerModule],\r\n  declarations: [IfReplaceableTemplateExistsDirective],\r\n  exports: [IfReplaceableTemplateExistsDirective, PageAlertContainerModule],\r\n})\r\nexport class LeptonXAbpCoreModule {\r\n  static forRoot(): ModuleWithProviders<LeptonXAbpCoreModule> {\r\n    return {\r\n      ngModule: LeptonXAbpCoreModule,\r\n      providers: [DOCUMENT_DIR_PROVIDER, MOBILE_NAVBAR_ITEMS_FILTER_PROVIDER],\r\n    };\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport {\r\n  ABP,\r\n  LocalizationService,\r\n  RoutesService,\r\n  TreeNode,\r\n} from '@abp/ng.core';\r\nimport { LpxNavbarItem, NavbarService } from '@volo/ngx-lepton-x.core';\r\nimport { map } from 'rxjs/operators';\r\nimport { MobileMenuItemFilterFn, MOBILE_NAVBAR_ITEMS_FILTER_TOKEN } from '../tokens/mobile-navbar-items-filter.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpNavbarService {\r\n  constructor(\r\n    private routes: RoutesService,\r\n    private navbarService: NavbarService,\r\n    private localizationService: LocalizationService,\r\n    @Inject(MOBILE_NAVBAR_ITEMS_FILTER_TOKEN) private mobileMenuItemFilterFn: MobileMenuItemFilterFn\r\n  ) {}\r\n\r\n  private mapRouteToNavItem = (\r\n    route: TreeNode<ABP.Route>,\r\n    index: number\r\n  ): LpxNavbarItem => {\r\n    return {\r\n      text: this.localizationService.instant(route.name),\r\n      link: route.children && route.children.length ? undefined : route.path,\r\n      icon: route.iconClass,\r\n      children: this.getRouteChildrenAsNavItems(route.children || []),\r\n      showOnMobileNavbar: this.mobileMenuItemFilterFn(route, index),\r\n    };\r\n  };\r\n\r\n  initRoutes() {\r\n    this.routes.visible$\r\n      .pipe(\r\n        map((routes) =>\r\n          routes.filter((route) => route.path || route.children.length)\r\n        )\r\n      )\r\n      .subscribe((routes) => {\r\n        this.navbarService.setNavbarItems(\r\n          ...routes.map(this.mapRouteToNavItem)\r\n        );\r\n      });\r\n  }\r\n\r\n  private getRouteChildrenAsNavItems(\r\n    children: TreeNode<ABP.Route>[]\r\n  ): LpxNavbarItem[] {\r\n    return children.map(this.mapRouteToNavItem);\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i3"],"mappings":"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"}
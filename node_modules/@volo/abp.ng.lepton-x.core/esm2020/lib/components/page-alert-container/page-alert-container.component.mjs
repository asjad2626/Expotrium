import { Component } from '@angular/core';
import { PageAlertService } from '@abp/ng.theme.shared';
import * as i0 from "@angular/core";
import * as i1 from "@abp/ng.theme.shared";
import * as i2 from "@angular/common";
import * as i3 from "@abp/ng.core";
export class PageAlertContainerComponent {
    constructor(service) {
        this.service = service;
        this.replaceableTemplateKey = {
            componentKey: 'Theme.PageAlertContainerComponent',
        };
    }
}
PageAlertContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: PageAlertContainerComponent, deps: [{ token: i1.PageAlertService }], target: i0.ɵɵFactoryTarget.Component });
PageAlertContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.0", type: PageAlertContainerComponent, selector: "abp-page-alert-container", ngImport: i0, template: "<ng-container *abpReplaceableTemplate=\"replaceableTemplateKey\">\r\n  <ng-container *ngFor=\"let alert of service.alerts$ | async; let i = index\">\r\n    <div\r\n      class=\"alert alert-{{ alert.type }} fade show\"\r\n      [ngClass]=\"{ 'alert-dismissible fade show': alert.dismissible }\"\r\n      role=\"alert\"\r\n    >\r\n      <h4 class=\"alert-heading\" *ngIf=\"alert.title\">\r\n        {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\r\n      </h4>\r\n      {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\r\n      <button\r\n        *ngIf=\"alert.dismissible\"\r\n        type=\"button\"\r\n        class=\"btn-close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        (click)=\"service.remove(i)\"\r\n      ></button>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.ReplaceableTemplateDirective, selector: "[abpReplaceableTemplate]", inputs: ["abpReplaceableTemplate"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.LocalizationPipe, name: "abpLocalization" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: PageAlertContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'abp-page-alert-container', template: "<ng-container *abpReplaceableTemplate=\"replaceableTemplateKey\">\r\n  <ng-container *ngFor=\"let alert of service.alerts$ | async; let i = index\">\r\n    <div\r\n      class=\"alert alert-{{ alert.type }} fade show\"\r\n      [ngClass]=\"{ 'alert-dismissible fade show': alert.dismissible }\"\r\n      role=\"alert\"\r\n    >\r\n      <h4 class=\"alert-heading\" *ngIf=\"alert.title\">\r\n        {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\r\n      </h4>\r\n      {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\r\n      <button\r\n        *ngIf=\"alert.dismissible\"\r\n        type=\"button\"\r\n        class=\"btn-close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        (click)=\"service.remove(i)\"\r\n      ></button>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.PageAlertService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1hbGVydC1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9sZXB0b24teC1hYnAtY29yZS9zcmMvbGliL2NvbXBvbmVudHMvcGFnZS1hbGVydC1jb250YWluZXIvcGFnZS1hbGVydC1jb250YWluZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9sZXB0b24teC1hYnAtY29yZS9zcmMvbGliL2NvbXBvbmVudHMvcGFnZS1hbGVydC1jb250YWluZXIvcGFnZS1hbGVydC1jb250YWluZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7QUFNeEQsTUFBTSxPQUFPLDJCQUEyQjtJQUt0QyxZQUFtQixPQUF5QjtRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUo1QywyQkFBc0IsR0FBRztZQUN2QixZQUFZLEVBQUUsbUNBQW1DO1NBQ2xELENBQUM7SUFFNkMsQ0FBQzs7d0hBTHJDLDJCQUEyQjs0R0FBM0IsMkJBQTJCLGdFQ1B4Qyw2MUJBc0JBOzJGRGZhLDJCQUEyQjtrQkFKdkMsU0FBUzsrQkFDRSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGFnZUFsZXJ0U2VydmljZSB9IGZyb20gJ0BhYnAvbmcudGhlbWUuc2hhcmVkJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYWJwLXBhZ2UtYWxlcnQtY29udGFpbmVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcGFnZS1hbGVydC1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGFnZUFsZXJ0Q29udGFpbmVyQ29tcG9uZW50IHtcclxuICByZXBsYWNlYWJsZVRlbXBsYXRlS2V5ID0ge1xyXG4gICAgY29tcG9uZW50S2V5OiAnVGhlbWUuUGFnZUFsZXJ0Q29udGFpbmVyQ29tcG9uZW50JyxcclxuICB9O1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogUGFnZUFsZXJ0U2VydmljZSkge31cclxufVxyXG4iLCI8bmctY29udGFpbmVyICphYnBSZXBsYWNlYWJsZVRlbXBsYXRlPVwicmVwbGFjZWFibGVUZW1wbGF0ZUtleVwiPlxyXG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGFsZXJ0IG9mIHNlcnZpY2UuYWxlcnRzJCB8IGFzeW5jOyBsZXQgaSA9IGluZGV4XCI+XHJcbiAgICA8ZGl2XHJcbiAgICAgIGNsYXNzPVwiYWxlcnQgYWxlcnQte3sgYWxlcnQudHlwZSB9fSBmYWRlIHNob3dcIlxyXG4gICAgICBbbmdDbGFzc109XCJ7ICdhbGVydC1kaXNtaXNzaWJsZSBmYWRlIHNob3cnOiBhbGVydC5kaXNtaXNzaWJsZSB9XCJcclxuICAgICAgcm9sZT1cImFsZXJ0XCJcclxuICAgID5cclxuICAgICAgPGg0IGNsYXNzPVwiYWxlcnQtaGVhZGluZ1wiICpuZ0lmPVwiYWxlcnQudGl0bGVcIj5cclxuICAgICAgICB7eyBhbGVydC50aXRsZSB8IGFicExvY2FsaXphdGlvbjogYWxlcnQudGl0bGVMb2NhbGl6YXRpb25QYXJhbXMgfX1cclxuICAgICAgPC9oND5cclxuICAgICAge3sgYWxlcnQubWVzc2FnZSB8IGFicExvY2FsaXphdGlvbjogYWxlcnQubWVzc2FnZUxvY2FsaXphdGlvblBhcmFtcyB9fVxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgKm5nSWY9XCJhbGVydC5kaXNtaXNzaWJsZVwiXHJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgICAgY2xhc3M9XCJidG4tY2xvc2VcIlxyXG4gICAgICAgIGRhdGEtZGlzbWlzcz1cImFsZXJ0XCJcclxuICAgICAgICBhcmlhLWxhYmVsPVwiQ2xvc2VcIlxyXG4gICAgICAgIChjbGljayk9XCJzZXJ2aWNlLnJlbW92ZShpKVwiXHJcbiAgICAgID48L2J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG48L25nLWNvbnRhaW5lcj5cclxuIl19
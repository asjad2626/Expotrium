import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { LanguageService } from '@volo/ngx-lepton-x.core';
import { OBSERVE, OBSERVE_PROVIDER } from 'ng-observe';
import * as i0 from "@angular/core";
import * as i1 from "@volo/ngx-lepton-x.core";
import * as i2 from "@angular/common";
export class MnLanguageSelectionComponent {
    constructor(service, observe) {
        this.service = service;
        this.observe = observe;
        this.availableLanguages = this.observe(this.service.languages$);
        this.selectedLanguage = this.observe(this.service.selectedLanguage$);
        this.menuHidden = true;
    }
    get langs() {
        return this.availableLanguages.value;
    }
    toggleMenu() {
        this.menuHidden = !this.menuHidden;
    }
    onLanguageSelection(lang) {
        this.service.setSelectedLanguage(lang);
    }
}
MnLanguageSelectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: MnLanguageSelectionComponent, deps: [{ token: i1.LanguageService }, { token: OBSERVE }], target: i0.ɵɵFactoryTarget.Component });
MnLanguageSelectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.0", type: MnLanguageSelectionComponent, selector: "lpx-mn-language-selection", providers: [OBSERVE_PROVIDER], ngImport: i0, template: "<div class=\"lpx-language-selection btn-toggle\" role=\"button\" (click)=\"toggleMenu()\">\r\n  <lpx-icon iconClass=\"bi bi-globe\"></lpx-icon>\r\n  {{ selectedLanguage.value?.displayName }}\r\n</div>\r\n\r\n<div class=\"action-group-menu\" [class.d-none]=\"menuHidden\">\r\n  <a class=\"action\" role=\"button\" (click)=\"onLanguageSelection(lang)\" *ngFor=\"let lang of langs\">\r\n    {{ lang.displayName }}\r\n  </a>\r\n</div>\r\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i1.IconComponent, selector: "lpx-icon", inputs: ["iconClass"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: MnLanguageSelectionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lpx-mn-language-selection', encapsulation: ViewEncapsulation.None, providers: [OBSERVE_PROVIDER], template: "<div class=\"lpx-language-selection btn-toggle\" role=\"button\" (click)=\"toggleMenu()\">\r\n  <lpx-icon iconClass=\"bi bi-globe\"></lpx-icon>\r\n  {{ selectedLanguage.value?.displayName }}\r\n</div>\r\n\r\n<div class=\"action-group-menu\" [class.d-none]=\"menuHidden\">\r\n  <a class=\"action\" role=\"button\" (click)=\"onLanguageSelection(lang)\" *ngFor=\"let lang of langs\">\r\n    {{ lang.displayName }}\r\n  </a>\r\n</div>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.LanguageService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [OBSERVE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW4tbGFuZ3VhZ2Utc2VsZWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbGVwdG9uLXgtbGl0ZS9sYXlvdXRzL3NyYy9saWIvY29tcG9uZW50cy9tbi1sYW5ndWFnZS1zZWxlY3Rpb24vbW4tbGFuZ3VhZ2Utc2VsZWN0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbGVwdG9uLXgtbGl0ZS9sYXlvdXRzL3NyYy9saWIvY29tcG9uZW50cy9tbi1sYW5ndWFnZS1zZWxlY3Rpb24vbW4tbGFuZ3VhZ2Utc2VsZWN0aW9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQWUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFhLE1BQU0sWUFBWSxDQUFDOzs7O0FBUWxFLE1BQU0sT0FBTyw0QkFBNEI7SUFVdkMsWUFDVSxPQUF3QixFQUNQLE9BQWtCO1FBRG5DLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ1AsWUFBTyxHQUFQLE9BQU8sQ0FBVztRQVg3Qyx1QkFBa0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDM0QscUJBQWdCLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFNaEUsZUFBVSxHQUFHLElBQUksQ0FBQztJQUtmLENBQUM7SUFUSixJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7SUFDdkMsQ0FBQztJQVNELFVBQVU7UUFDUixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsbUJBQW1CLENBQUMsSUFBaUI7UUFDbkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDOzt5SEFyQlUsNEJBQTRCLGlEQVk3QixPQUFPOzZHQVpOLDRCQUE0QixvREFGNUIsQ0FBQyxnQkFBZ0IsQ0FBQywwQkNSL0Isb2JBVUE7MkZEQWEsNEJBQTRCO2tCQU54QyxTQUFTOytCQUNFLDJCQUEyQixpQkFFdEIsaUJBQWlCLENBQUMsSUFBSSxhQUMxQixDQUFDLGdCQUFnQixDQUFDOzswQkFjMUIsTUFBTTsyQkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExhbmd1YWdlU2VydmljZSwgTHB4TGFuZ3VhZ2UgfSBmcm9tICdAdm9sby9uZ3gtbGVwdG9uLXguY29yZSc7XHJcbmltcG9ydCB7IE9CU0VSVkUsIE9CU0VSVkVfUFJPVklERVIsIE9ic2VydmVGbiB9IGZyb20gJ25nLW9ic2VydmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdscHgtbW4tbGFuZ3VhZ2Utc2VsZWN0aW9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbW4tbGFuZ3VhZ2Utc2VsZWN0aW9uLmNvbXBvbmVudC5odG1sJyxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIHByb3ZpZGVyczogW09CU0VSVkVfUFJPVklERVJdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTW5MYW5ndWFnZVNlbGVjdGlvbkNvbXBvbmVudCB7XHJcbiAgYXZhaWxhYmxlTGFuZ3VhZ2VzID0gdGhpcy5vYnNlcnZlKHRoaXMuc2VydmljZS5sYW5ndWFnZXMkKTtcclxuICBzZWxlY3RlZExhbmd1YWdlID0gdGhpcy5vYnNlcnZlKHRoaXMuc2VydmljZS5zZWxlY3RlZExhbmd1YWdlJCk7XHJcblxyXG4gIGdldCBsYW5ncygpIHtcclxuICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZUxhbmd1YWdlcy52YWx1ZTtcclxuICB9XHJcblxyXG4gIG1lbnVIaWRkZW4gPSB0cnVlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgc2VydmljZTogTGFuZ3VhZ2VTZXJ2aWNlLFxyXG4gICAgQEluamVjdChPQlNFUlZFKSBwcml2YXRlIG9ic2VydmU6IE9ic2VydmVGblxyXG4gICkge31cclxuXHJcbiAgdG9nZ2xlTWVudSgpIHtcclxuICAgIHRoaXMubWVudUhpZGRlbiA9ICF0aGlzLm1lbnVIaWRkZW47XHJcbiAgfVxyXG5cclxuICBvbkxhbmd1YWdlU2VsZWN0aW9uKGxhbmc6IExweExhbmd1YWdlKSB7XHJcbiAgICB0aGlzLnNlcnZpY2Uuc2V0U2VsZWN0ZWRMYW5ndWFnZShsYW5nKTtcclxuICB9XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cImxweC1sYW5ndWFnZS1zZWxlY3Rpb24gYnRuLXRvZ2dsZVwiIHJvbGU9XCJidXR0b25cIiAoY2xpY2spPVwidG9nZ2xlTWVudSgpXCI+XHJcbiAgPGxweC1pY29uIGljb25DbGFzcz1cImJpIGJpLWdsb2JlXCI+PC9scHgtaWNvbj5cclxuICB7eyBzZWxlY3RlZExhbmd1YWdlLnZhbHVlPy5kaXNwbGF5TmFtZSB9fVxyXG48L2Rpdj5cclxuXHJcbjxkaXYgY2xhc3M9XCJhY3Rpb24tZ3JvdXAtbWVudVwiIFtjbGFzcy5kLW5vbmVdPVwibWVudUhpZGRlblwiPlxyXG4gIDxhIGNsYXNzPVwiYWN0aW9uXCIgcm9sZT1cImJ1dHRvblwiIChjbGljayk9XCJvbkxhbmd1YWdlU2VsZWN0aW9uKGxhbmcpXCIgKm5nRm9yPVwibGV0IGxhbmcgb2YgbGFuZ3NcIj5cclxuICAgIHt7IGxhbmcuZGlzcGxheU5hbWUgfX1cclxuICA8L2E+XHJcbjwvZGl2PlxyXG4iXX0=
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LpxBreadcrumbModule, LpxFooterModule, LpxNavbarModule, LpxResponsiveModule, PanelsModule, } from '@volo/ngx-lepton-x.core';
import { LanguageSelectionModule, UserProfileModule, } from '@volo/ngx-lepton-x.lite';
import { LpxMobileNavbarModule } from '../components/mobile-navbar/mobile-navbar.module';
import { SettingsPanelDirective } from './panels/settings-panel.directive';
import { SideMenuLayoutComponent } from './side-menu-layout.component';
import { LanguageSelectionPanelDirective } from './panels/language-selection-panel.directive';
import { UserProfilePanelDirective } from './panels/user-profile-panel.directive';
import { TopbarContentPanelDirective } from './panels/topbar-content-panel.directive';
import { getSideMenuLayoutStylesProvider } from './providers';
import { MnUserProfileModule } from '../components';
import { MobileUserProfilePanelDirective } from './panels/mobile-user-profile-panel.directive';
import { MnLanguageSelectionModule } from '../components/mn-language-selection';
import { MobileLanguageSelectionDirective } from './panels/mobile-language-selection.directive';
import * as i0 from "@angular/core";
const declarationsWithExports = [
    SideMenuLayoutComponent,
    SettingsPanelDirective,
    LanguageSelectionPanelDirective,
    TopbarContentPanelDirective,
    UserProfilePanelDirective,
    MobileUserProfilePanelDirective,
    MobileLanguageSelectionDirective,
];
export class LpxSideMenuLayoutModule {
    static forRoot(options) {
        return {
            ngModule: LpxSideMenuLayoutModule,
            providers: [getSideMenuLayoutStylesProvider(options?.styleFactory)],
        };
    }
}
LpxSideMenuLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxSideMenuLayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LpxSideMenuLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.0", ngImport: i0, type: LpxSideMenuLayoutModule, declarations: [SideMenuLayoutComponent,
        SettingsPanelDirective,
        LanguageSelectionPanelDirective,
        TopbarContentPanelDirective,
        UserProfilePanelDirective,
        MobileUserProfilePanelDirective,
        MobileLanguageSelectionDirective], imports: [CommonModule,
        LpxNavbarModule,
        LpxBreadcrumbModule,
        LpxResponsiveModule,
        UserProfileModule,
        LanguageSelectionModule,
        LpxMobileNavbarModule,
        MnUserProfileModule,
        MnLanguageSelectionModule,
        LpxFooterModule,
        PanelsModule], exports: [SideMenuLayoutComponent,
        SettingsPanelDirective,
        LanguageSelectionPanelDirective,
        TopbarContentPanelDirective,
        UserProfilePanelDirective,
        MobileUserProfilePanelDirective,
        MobileLanguageSelectionDirective] });
LpxSideMenuLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxSideMenuLayoutModule, imports: [CommonModule,
        LpxNavbarModule,
        LpxBreadcrumbModule,
        LpxResponsiveModule,
        UserProfileModule,
        LanguageSelectionModule,
        LpxMobileNavbarModule,
        MnUserProfileModule,
        MnLanguageSelectionModule,
        LpxFooterModule,
        PanelsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: LpxSideMenuLayoutModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...declarationsWithExports],
                    imports: [
                        CommonModule,
                        LpxNavbarModule,
                        LpxBreadcrumbModule,
                        LpxResponsiveModule,
                        UserProfileModule,
                        LanguageSelectionModule,
                        LpxMobileNavbarModule,
                        MnUserProfileModule,
                        MnLanguageSelectionModule,
                        LpxFooterModule,
                        PanelsModule,
                    ],
                    exports: [...declarationsWithExports],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZS1tZW51LWxheW91dC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2xlcHRvbi14LWxpdGUvbGF5b3V0cy9zcmMvbGliL3NpZGUtbWVudS1sYXlvdXQvc2lkZS1tZW51LWxheW91dC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFFTCxtQkFBbUIsRUFDbkIsZUFBZSxFQUNmLGVBQWUsRUFDZixtQkFBbUIsRUFDbkIsWUFBWSxHQUNiLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixpQkFBaUIsR0FDbEIsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUV6RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM5RixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNsRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN0RixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQy9GLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDhDQUE4QyxDQUFDOztBQUdoRyxNQUFNLHVCQUF1QixHQUFHO0lBQzlCLHVCQUF1QjtJQUN2QixzQkFBc0I7SUFDdEIsK0JBQStCO0lBQy9CLDJCQUEyQjtJQUMzQix5QkFBeUI7SUFDekIsK0JBQStCO0lBQy9CLGdDQUFnQztDQUNqQyxDQUFDO0FBbUJGLE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFrQztRQUVsQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyxTQUFTLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7U0FDcEUsQ0FBQztJQUNKLENBQUM7O29IQVJVLHVCQUF1QjtxSEFBdkIsdUJBQXVCLGlCQTFCbEMsdUJBQXVCO1FBQ3ZCLHNCQUFzQjtRQUN0QiwrQkFBK0I7UUFDL0IsMkJBQTJCO1FBQzNCLHlCQUF5QjtRQUN6QiwrQkFBK0I7UUFDL0IsZ0NBQWdDLGFBTTlCLFlBQVk7UUFDWixlQUFlO1FBQ2YsbUJBQW1CO1FBQ25CLG1CQUFtQjtRQUNuQixpQkFBaUI7UUFDakIsdUJBQXVCO1FBQ3ZCLHFCQUFxQjtRQUNyQixtQkFBbUI7UUFDbkIseUJBQXlCO1FBQ3pCLGVBQWU7UUFDZixZQUFZLGFBdEJkLHVCQUF1QjtRQUN2QixzQkFBc0I7UUFDdEIsK0JBQStCO1FBQy9CLDJCQUEyQjtRQUMzQix5QkFBeUI7UUFDekIsK0JBQStCO1FBQy9CLGdDQUFnQztxSEFvQnJCLHVCQUF1QixZQWRoQyxZQUFZO1FBQ1osZUFBZTtRQUNmLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsaUJBQWlCO1FBQ2pCLHVCQUF1QjtRQUN2QixxQkFBcUI7UUFDckIsbUJBQW1CO1FBQ25CLHlCQUF5QjtRQUN6QixlQUFlO1FBQ2YsWUFBWTsyRkFJSCx1QkFBdUI7a0JBakJuQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsdUJBQXVCLENBQUM7b0JBQzFDLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsbUJBQW1CO3dCQUNuQixtQkFBbUI7d0JBQ25CLGlCQUFpQjt3QkFDakIsdUJBQXVCO3dCQUN2QixxQkFBcUI7d0JBQ3JCLG1CQUFtQjt3QkFDbkIseUJBQXlCO3dCQUN6QixlQUFlO3dCQUNmLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFLENBQUMsR0FBRyx1QkFBdUIsQ0FBQztpQkFDdEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQge1xyXG4gIEhhc1N0eWxlRmFjdG9yeSxcclxuICBMcHhCcmVhZGNydW1iTW9kdWxlLFxyXG4gIExweEZvb3Rlck1vZHVsZSxcclxuICBMcHhOYXZiYXJNb2R1bGUsXHJcbiAgTHB4UmVzcG9uc2l2ZU1vZHVsZSxcclxuICBQYW5lbHNNb2R1bGUsXHJcbn0gZnJvbSAnQHZvbG8vbmd4LWxlcHRvbi14LmNvcmUnO1xyXG5pbXBvcnQge1xyXG4gIExhbmd1YWdlU2VsZWN0aW9uTW9kdWxlLFxyXG4gIFVzZXJQcm9maWxlTW9kdWxlLFxyXG59IGZyb20gJ0B2b2xvL25neC1sZXB0b24teC5saXRlJztcclxuaW1wb3J0IHsgTHB4TW9iaWxlTmF2YmFyTW9kdWxlIH0gZnJvbSAnLi4vY29tcG9uZW50cy9tb2JpbGUtbmF2YmFyL21vYmlsZS1uYXZiYXIubW9kdWxlJztcclxuXHJcbmltcG9ydCB7IFNldHRpbmdzUGFuZWxEaXJlY3RpdmUgfSBmcm9tICcuL3BhbmVscy9zZXR0aW5ncy1wYW5lbC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBTaWRlTWVudUxheW91dENvbXBvbmVudCB9IGZyb20gJy4vc2lkZS1tZW51LWxheW91dC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYW5ndWFnZVNlbGVjdGlvblBhbmVsRGlyZWN0aXZlIH0gZnJvbSAnLi9wYW5lbHMvbGFuZ3VhZ2Utc2VsZWN0aW9uLXBhbmVsLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFVzZXJQcm9maWxlUGFuZWxEaXJlY3RpdmUgfSBmcm9tICcuL3BhbmVscy91c2VyLXByb2ZpbGUtcGFuZWwuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVG9wYmFyQ29udGVudFBhbmVsRGlyZWN0aXZlIH0gZnJvbSAnLi9wYW5lbHMvdG9wYmFyLWNvbnRlbnQtcGFuZWwuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgZ2V0U2lkZU1lbnVMYXlvdXRTdHlsZXNQcm92aWRlciB9IGZyb20gJy4vcHJvdmlkZXJzJztcclxuIGltcG9ydCB7IE1uVXNlclByb2ZpbGVNb2R1bGUgfSBmcm9tICcuLi9jb21wb25lbnRzJztcclxuaW1wb3J0IHsgTW9iaWxlVXNlclByb2ZpbGVQYW5lbERpcmVjdGl2ZSB9IGZyb20gJy4vcGFuZWxzL21vYmlsZS11c2VyLXByb2ZpbGUtcGFuZWwuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTW5MYW5ndWFnZVNlbGVjdGlvbk1vZHVsZSB9IGZyb20gJy4uL2NvbXBvbmVudHMvbW4tbGFuZ3VhZ2Utc2VsZWN0aW9uJztcclxuaW1wb3J0IHsgTW9iaWxlTGFuZ3VhZ2VTZWxlY3Rpb25EaXJlY3RpdmUgfSBmcm9tICcuL3BhbmVscy9tb2JpbGUtbGFuZ3VhZ2Utc2VsZWN0aW9uLmRpcmVjdGl2ZSc7XHJcblxyXG5leHBvcnQgdHlwZSBMcHhTaWRlTWVudUxheW91dE9wdGlvbnMgPSBIYXNTdHlsZUZhY3Rvcnk7XHJcbmNvbnN0IGRlY2xhcmF0aW9uc1dpdGhFeHBvcnRzID0gW1xyXG4gIFNpZGVNZW51TGF5b3V0Q29tcG9uZW50LFxyXG4gIFNldHRpbmdzUGFuZWxEaXJlY3RpdmUsXHJcbiAgTGFuZ3VhZ2VTZWxlY3Rpb25QYW5lbERpcmVjdGl2ZSxcclxuICBUb3BiYXJDb250ZW50UGFuZWxEaXJlY3RpdmUsXHJcbiAgVXNlclByb2ZpbGVQYW5lbERpcmVjdGl2ZSxcclxuICBNb2JpbGVVc2VyUHJvZmlsZVBhbmVsRGlyZWN0aXZlLFxyXG4gIE1vYmlsZUxhbmd1YWdlU2VsZWN0aW9uRGlyZWN0aXZlLFxyXG5dO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFsuLi5kZWNsYXJhdGlvbnNXaXRoRXhwb3J0c10sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTHB4TmF2YmFyTW9kdWxlLFxyXG4gICAgTHB4QnJlYWRjcnVtYk1vZHVsZSxcclxuICAgIExweFJlc3BvbnNpdmVNb2R1bGUsXHJcbiAgICBVc2VyUHJvZmlsZU1vZHVsZSxcclxuICAgIExhbmd1YWdlU2VsZWN0aW9uTW9kdWxlLFxyXG4gICAgTHB4TW9iaWxlTmF2YmFyTW9kdWxlLFxyXG4gICAgTW5Vc2VyUHJvZmlsZU1vZHVsZSxcclxuICAgIE1uTGFuZ3VhZ2VTZWxlY3Rpb25Nb2R1bGUsXHJcbiAgICBMcHhGb290ZXJNb2R1bGUsXHJcbiAgICBQYW5lbHNNb2R1bGUsXHJcbiAgXSxcclxuICBleHBvcnRzOiBbLi4uZGVjbGFyYXRpb25zV2l0aEV4cG9ydHNdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTHB4U2lkZU1lbnVMYXlvdXRNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KFxyXG4gICAgb3B0aW9ucz86IExweFNpZGVNZW51TGF5b3V0T3B0aW9uc1xyXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8THB4U2lkZU1lbnVMYXlvdXRNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBMcHhTaWRlTWVudUxheW91dE1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbZ2V0U2lkZU1lbnVMYXlvdXRTdHlsZXNQcm92aWRlcihvcHRpb25zPy5zdHlsZUZhY3RvcnkpXSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==
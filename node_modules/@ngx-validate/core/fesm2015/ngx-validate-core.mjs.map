{"version":3,"file":"ngx-validate-core.mjs","sources":["../../../packages/core/src/lib/constants/blueprints.ts","../../../packages/core/src/lib/tokens/blueprints.token.ts","../../../packages/core/src/lib/tokens/error-template.token.ts","../../../packages/core/src/lib/tokens/invalid-classes.token.ts","../../../packages/core/src/lib/tokens/map-errors-fn.token.ts","../../../packages/core/src/lib/tokens/target-selector.token.ts","../../../packages/core/src/lib/tokens/validate-on-submit.token.ts","../../../packages/core/src/lib/utils/common.ts","../../../packages/core/src/lib/utils/string-utils.ts","../../../packages/core/src/lib/utils/mappers.ts","../../../packages/core/src/lib/utils/rxjs-utils.ts","../../../packages/core/src/lib/abstracts/abstract-validation.directive.ts","../../../packages/core/src/lib/components/validation-error.component.ts","../../../packages/core/src/lib/directives/validation-target.directive.ts","../../../packages/core/src/lib/directives/validation-container.directive.ts","../../../packages/core/src/lib/directives/validation-group.directive.ts","../../../packages/core/src/lib/directives/validation-style.directive.ts","../../../packages/core/src/lib/directives/validation.directive.ts","../../../packages/core/src/lib/core.module.ts","../../../packages/core/src/lib/validators/password-validators.ts","../../../packages/core/src/public_api.ts","../../../packages/core/src/ngx-validate-core.ts"],"sourcesContent":["export const BLUEPRINTS = {\n  email: 'Please enter a valid email address.',\n  max: 'Max. value should be {{ max }}. ({{ actual }} entered)',\n  maxlength:\n    'Max. {{ requiredLength }} characters are allowed. (has {{ actualLength }})',\n  min: 'Min. value should be {{ min }}. ({{ actual }} entered)',\n  minlength:\n    'Min. {{ requiredLength }} characters are required. (has {{ actualLength }})',\n  pattern: 'Invalid pattern. Please review your input.',\n  required: 'This field is required.',\n  passwordMismatch: 'Passwords do not match.',\n  invalidPassword: 'Password should include {{ description }}.',\n};\n","import { InjectionToken } from '@angular/core';\nimport { Validation } from '../models';\n\nexport const VALIDATION_BLUEPRINTS = new InjectionToken<Validation.Blueprints>('validation.blueprints');\n","import { InjectionToken, TemplateRef, Type } from '@angular/core';\n\nexport const VALIDATION_ERROR_TEMPLATE = new InjectionToken<TemplateRef<any> | Type<any>>('validation.error.template');\n","import { InjectionToken } from '@angular/core';\n\nexport const VALIDATION_INVALID_CLASSES = new InjectionToken<string>('validation.invalid.classes');\n","import { InjectionToken } from '@angular/core';\nimport { Validation } from '../models';\n\nexport const VALIDATION_MAP_ERRORS_FN = new InjectionToken<Validation.MapErrorsFn>('validation.map.errors.fn');\n","import { InjectionToken } from '@angular/core';\n\nexport const VALIDATION_TARGET_SELECTOR = new InjectionToken<string>('validation.target.selector');\n","import { InjectionToken } from '@angular/core';\n\nexport const VALIDATION_VALIDATE_ON_SUBMIT = new InjectionToken<boolean>('validation.validate.on.submit');\n","export function evalPropTruthy(prop: any): boolean {\n  return prop || typeof prop === 'string';\n}\n","import { Validation } from '../models';\n\nconst CHARMAP: Validation.ParamMap = {\n  á: 'a',\n  Á: 'A',\n  À: 'A',\n  à: 'a',\n  Ă: 'A',\n  ă: 'a',\n  Ắ: 'A',\n  ắ: 'a',\n  ằ: 'a',\n  Ằ: 'A',\n  Ẵ: 'A',\n  ẵ: 'a',\n  ẳ: 'a',\n  Ẳ: 'A',\n  â: 'a',\n  Â: 'A',\n  ấ: 'a',\n  Ấ: 'A',\n  ầ: 'a',\n  Ầ: 'A',\n  ǎ: 'a',\n  Ǎ: 'A',\n  å: 'a',\n  Å: 'A',\n  Ǻ: 'A',\n  ǻ: 'a',\n  ä: 'a',\n  Ä: 'A',\n  a̋: 'a',\n  A̋: 'A',\n  Ã: 'A',\n  ã: 'a',\n  A̧: 'A',\n  a̧: 'a',\n  Ą: 'A',\n  ą: 'a',\n  ā: 'a',\n  Ā: 'A',\n  ȁ: 'a',\n  Ȁ: 'A',\n  ȃ: 'a',\n  Ȃ: 'A',\n  Ặ: 'A',\n  ặ: 'a',\n  æ: 'a',\n  Æ: 'A',\n  Ǽ: 'A',\n  ǽ: 'a',\n  b̌: 'b',\n  B̌: 'B',\n  b̧: 'b',\n  B̧: 'B',\n  ć: 'c',\n  Ć: 'C',\n  c̆: 'c',\n  C̆: 'C',\n  ĉ: 'c',\n  Ĉ: 'C',\n  č: 'c',\n  Č: 'C',\n  ċ: 'c',\n  Ċ: 'C',\n  Ç: 'C',\n  ç: 'c',\n  Ḉ: 'C',\n  ḉ: 'c',\n  č̣: 'c',\n  Č̣: 'C',\n  Ď: 'D',\n  ď: 'd',\n  ḑ: 'd',\n  Ḑ: 'D',\n  đ: 'd',\n  Đ: 'D',\n  Ð: 'D',\n  ð: 'd',\n  É: 'E',\n  é: 'e',\n  È: 'E',\n  è: 'e',\n  Ĕ: 'E',\n  ĕ: 'e',\n  ê: 'e',\n  Ê: 'E',\n  Ế: 'E',\n  ế: 'e',\n  ề: 'e',\n  Ề: 'E',\n  Ê̌: 'E',\n  ê̌: 'e',\n  Ě: 'E',\n  ě: 'e',\n  ë: 'e',\n  Ë: 'E',\n  e̋: 'e',\n  E̋: 'E',\n  Ė: 'E',\n  ė: 'e',\n  Ȩ: 'E',\n  ȩ: 'e',\n  ḝ: 'e',\n  Ḝ: 'E',\n  Ę: 'E',\n  ę: 'e',\n  Ē: 'E',\n  ē: 'e',\n  Ḗ: 'E',\n  ḗ: 'e',\n  Ḕ: 'E',\n  ḕ: 'e',\n  Ȅ: 'E',\n  ȅ: 'e',\n  Ȇ: 'E',\n  ȇ: 'e',\n  ɛ̧: 'e',\n  Ɛ̧: 'E',\n  f̌: 'f',\n  F̌: 'F',\n  ƒ: 'f',\n  ǵ: 'g',\n  Ǵ: 'G',\n  ğ: 'g',\n  Ğ: 'G',\n  Ĝ: 'G',\n  ĝ: 'g',\n  ǧ: 'g',\n  Ǧ: 'G',\n  Ġ: 'G',\n  ġ: 'g',\n  ģ: 'g',\n  Ģ: 'G',\n  Ĥ: 'H',\n  ĥ: 'h',\n  ȟ: 'h',\n  Ȟ: 'H',\n  ḩ: 'h',\n  Ḩ: 'H',\n  ħ: 'h',\n  Ħ: 'H',\n  ḫ: 'h',\n  Ḫ: 'H',\n  í: 'i',\n  Í: 'I',\n  Ì: 'I',\n  ì: 'i',\n  Ĭ: 'I',\n  ĭ: 'i',\n  Î: 'I',\n  î: 'i',\n  ǐ: 'i',\n  Ǐ: 'I',\n  ï: 'i',\n  Ï: 'I',\n  ḯ: 'i',\n  Ḯ: 'I',\n  I̋: 'I',\n  i̋: 'i',\n  ĩ: 'i',\n  Ĩ: 'I',\n  İ: 'I',\n  I̧: 'I',\n  i̧: 'i',\n  Į: 'I',\n  į: 'i',\n  ī: 'i',\n  Ī: 'I',\n  ȉ: 'i',\n  Ȉ: 'I',\n  ȋ: 'i',\n  Ȋ: 'I',\n  ĳ: 'i',\n  Ĳ: 'I',\n  ı: 'i',\n  Ɨ̧: 'I',\n  ɨ̧: 'i',\n  ĵ: 'j',\n  Ĵ: 'J',\n  ǰ: 'j',\n  J̌: 'J',\n  Ḱ: 'K',\n  ḱ: 'k',\n  k̆: 'k',\n  K̆: 'K',\n  ǩ: 'k',\n  Ǩ: 'K',\n  ķ: 'k',\n  Ķ: 'K',\n  Ĺ: 'L',\n  ĺ: 'l',\n  Ľ: 'L',\n  ľ: 'l',\n  ļ: 'l',\n  Ļ: 'L',\n  ł: 'l',\n  Ł: 'l',\n  Ŀ: 'L',\n  ŀ: 'l',\n  Ḿ: 'M',\n  ḿ: 'm',\n  m̆: 'm',\n  M̆: 'M',\n  m̌: 'm',\n  M̌: 'M',\n  M̧: 'M',\n  m̧: 'm',\n  Ń: 'N',\n  ń: 'n',\n  Ǹ: 'N',\n  ǹ: 'n',\n  n̆: 'n',\n  N̆: 'N',\n  Ň: 'N',\n  ň: 'n',\n  ñ: 'n',\n  Ñ: 'N',\n  Ņ: 'N',\n  ņ: 'n',\n  ó: 'o',\n  Ó: 'O',\n  Ò: 'O',\n  ò: 'o',\n  Ŏ: 'O',\n  ŏ: 'o',\n  Ô: 'O',\n  ô: 'o',\n  ố: 'o',\n  Ố: 'O',\n  ồ: 'o',\n  Ồ: 'O',\n  Ǒ: 'O',\n  ǒ: 'o',\n  Ö: 'O',\n  ö: 'o',\n  ő: 'o',\n  Ő: 'O',\n  Õ: 'O',\n  õ: 'o',\n  ṍ: 'o',\n  Ṍ: 'O',\n  Ø: 'O',\n  ø: 'o',\n  Ǿ: 'O',\n  ǿ: 'o',\n  o̧: 'o',\n  O̧: 'O',\n  Ō: 'O',\n  ō: 'o',\n  ṓ: 'o',\n  Ṓ: 'O',\n  ṑ: 'o',\n  Ṑ: 'O',\n  ȍ: 'o',\n  Ȍ: 'O',\n  ȏ: 'o',\n  Ȏ: 'O',\n  ơ: 'o',\n  Ơ: 'O',\n  œ: 'o',\n  Œ: 'O',\n  ṕ: 'p',\n  Ṕ: 'P',\n  p̆: 'p',\n  P̆: 'P',\n  P̌: 'P',\n  p̌: 'p',\n  Q̌: 'Q',\n  q̌: 'q',\n  Q̧: 'Q',\n  q̧: 'q',\n  ŕ: 'r',\n  Ŕ: 'R',\n  r̆: 'r',\n  R̆: 'R',\n  Ř: 'R',\n  ř: 'r',\n  ŗ: 'r',\n  Ŗ: 'R',\n  Ř̩: 'R',\n  ř̩: 'r',\n  ȑ: 'r',\n  Ȑ: 'R',\n  Ȓ: 'R',\n  ȓ: 'r',\n  Ś: 'S',\n  ś: 's',\n  Ṥ: 'S',\n  ṥ: 's',\n  Ŝ: 'S',\n  ŝ: 's',\n  š: 's',\n  Š: 'S',\n  Ṧ: 'S',\n  ṧ: 's',\n  ş: 's',\n  Ş: 'S',\n  ș: 's',\n  Ș: 'S',\n  ſ: 's',\n  T̆: 'T',\n  t̆: 't',\n  Ť: 'T',\n  ť: 't',\n  ţ: 't',\n  Ţ: 'T',\n  Ț: 'T',\n  ț: 't',\n  ŧ: 't',\n  Ŧ: 'T',\n  Ú: 'U',\n  ú: 'u',\n  ù: 'u',\n  Ù: 'U',\n  ŭ: 'u',\n  Ŭ: 'U',\n  Û: 'U',\n  û: 'u',\n  ǔ: 'u',\n  Ǔ: 'U',\n  Ů: 'U',\n  ů: 'u',\n  ü: 'u',\n  Ü: 'U',\n  ǘ: 'u',\n  Ǘ: 'U',\n  Ǜ: 'U',\n  ǜ: 'u',\n  ǚ: 'u',\n  Ǚ: 'U',\n  ǖ: 'u',\n  Ǖ: 'U',\n  Ű: 'U',\n  ű: 'u',\n  ũ: 'u',\n  Ũ: 'U',\n  Ṹ: 'U',\n  ṹ: 'u',\n  u̧: 'u',\n  U̧: 'U',\n  Ų: 'U',\n  ų: 'u',\n  Ū: 'U',\n  ū: 'u',\n  ȕ: 'u',\n  Ȕ: 'U',\n  Ȗ: 'U',\n  ȗ: 'u',\n  ư: 'u',\n  Ư: 'U',\n  ứ: 'u',\n  Ứ: 'U',\n  ừ: 'u',\n  Ừ: 'U',\n  V̆: 'V',\n  v̆: 'v',\n  v̌: 'v',\n  V̌: 'V',\n  Ẃ: 'W',\n  ẃ: 'w',\n  Ẁ: 'W',\n  ẁ: 'w',\n  ŵ: 'w',\n  Ŵ: 'W',\n  W̌: 'W',\n  w̌: 'w',\n  x́: 'x',\n  X́: 'X',\n  X̆: 'X',\n  x̆: 'x',\n  x̌: 'x',\n  X̌: 'X',\n  X̧: 'X',\n  x̧: 'x',\n  Ý: 'Y',\n  ý: 'y',\n  Ỳ: 'Y',\n  ỳ: 'y',\n  y̆: 'y',\n  Y̆: 'Y',\n  Ŷ: 'Y',\n  ŷ: 'y',\n  y̌: 'y',\n  Y̌: 'Y',\n  ÿ: 'y',\n  Ÿ: 'Y',\n  ź: 'z',\n  Ź: 'Z',\n  Ž: 'Z',\n  ž: 'z',\n  Ż: 'Z',\n  ż: 'z',\n  Z̧: 'Z',\n  z̧: 'z',\n};\n\nexport function interpolate(text: string): string {\n  return '{{\\\\s*(' + text + ')\\\\s*}}';\n}\n\nexport function mapReplace(\n  blueprint: string,\n  map: Validation.ParamMap,\n  interpolation?: boolean,\n): string {\n  if (typeof blueprint !== 'string') return '';\n  if (typeof map !== 'object') return blueprint;\n\n  const expression = Object.keys(map).join('|');\n  const mapRegExp = new RegExp(\n    interpolation ? interpolate(expression) : expression,\n    'g',\n  );\n\n  return blueprint.replace(mapRegExp, match => {\n    if (interpolation)\n      return String(map[match.replace(/\\{\\{\\s*|\\s*\\}\\}/g, '')]);\n\n    return String(map[match]);\n  });\n}\n\nexport function normalizeDiacritics(text: string): string {\n  return mapReplace(text, CHARMAP);\n}\n\nexport function addCommas(list: string[]): string {\n  return list.reduce(\n    (acc, item, index, { length }) =>\n      acc +\n      (!index\n        ? ''\n        : length < 3\n        ? ' and '\n        : index === length - 1\n        ? ', and '\n        : ', ') +\n      item,\n    '',\n  );\n}\n","import { Validation } from '../models';\nimport { mapReplace } from './string-utils';\n\nexport function generateValidationError(\n  key: string,\n  params: Validation.ParamMap,\n  blueprint: string,\n): Validation.Error {\n  return {\n    key,\n    params,\n    message: mapReplace(blueprint, params, true),\n  };\n}\n\nexport const defaultMapErrorsFn: Validation.MapErrorsFn = (\n  errors: Validation.Error[],\n) => {\n  return errors;\n};\n","import { MonoTypeOperatorFunction, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @deprecated doesn't work with Ivy, will be removed in v1.0\n */\nexport function takeUntilDestroy<T>(component: any): MonoTypeOperatorFunction<T> {\n  const proto = Object.getPrototypeOf(component);\n  const onDestroy = proto.ngOnDestroy;\n  const destroy$ = new Subject<void>();\n\n  proto.ngOnDestroy = function() {\n    onDestroy.apply(this, arguments);\n\n    destroy$.next();\n    destroy$.complete();\n  };\n\n  return takeUntil<T>(destroy$);\n}\n","import {\n  Directive,\n  ElementRef,\n  Injector,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  Type,\n} from '@angular/core';\nimport { UntypedFormGroup, FormGroupDirective, FormGroupName } from '@angular/forms';\nimport { merge, NEVER, Observable, ReplaySubject } from 'rxjs';\nimport { BLUEPRINTS } from '../constants';\nimport { ValidationGroupDirective } from '../directives/validation-group.directive';\nimport { Validation } from '../models';\nimport {\n  VALIDATION_BLUEPRINTS,\n  VALIDATION_ERROR_TEMPLATE,\n  VALIDATION_INVALID_CLASSES,\n  VALIDATION_MAP_ERRORS_FN,\n  VALIDATION_TARGET_SELECTOR,\n  VALIDATION_VALIDATE_ON_SUBMIT,\n} from '../tokens';\nimport { evalPropTruthy } from '../utils';\n\n@Directive({\n  /* tslint:disable-next-line */\n  selector: 'abstractValidationDirective',\n})\nexport class AbstractValidationDirective implements OnDestroy {\n  @Input('blueprints')\n  _blueprints: Validation.Blueprints;\n\n  @Input('errorTemplate')\n  _errorTemplate: TemplateRef<any> | Type<any>;\n\n  @Input('invalidClasses')\n  _invalidClasses: string;\n\n  @Input('mapErrorsFn')\n  _mapErrorsFn: Validation.MapErrorsFn;\n\n  @Input('skipValidation')\n  _skipValidation: boolean;\n\n  @Input('targetSelector')\n  _targetSelector: string;\n\n  @Input('validateOnSubmit')\n  _validateOnSubmit: boolean;\n\n  get group(): UntypedFormGroup {\n    return (\n      (this.groupRef || ({} as FormGroupDirective)).form ||\n      (this.groupName || ({} as FormGroupName)).control\n    );\n  }\n\n  get parent(): Partial<ValidationGroupDirective> {\n    return this.parentRef || { getStream: () => null };\n  }\n\n  get blueprints(): Validation.Blueprints {\n    return {\n      ...BLUEPRINTS,\n      ...(this._blueprints || this.parent.blueprints || this.config.blueprints || {}),\n    };\n  }\n\n  get errorTemplate(): TemplateRef<any> | Type<any> {\n    return this._errorTemplate || this.parent.errorTemplate || this.config.errorTemplate;\n  }\n\n  get invalidClasses(): string {\n    return this._invalidClasses || this.parent.invalidClasses || this.config.invalidClasses;\n  }\n\n  get mapErrorsFn(): Validation.MapErrorsFn {\n    return this._mapErrorsFn || this.parent.mapErrorsFn || this.config.mapErrorsFn;\n  }\n\n  get skipValidation(): boolean {\n    return (\n      evalPropTruthy(this._skipValidation) ||\n      this.parent.skipValidation ||\n      this.config.skipValidation\n    );\n  }\n\n  get targetSelector(): string {\n    return this._targetSelector || this.parent.targetSelector || this.config.targetSelector;\n  }\n\n  get validateOnSubmit(): boolean {\n    return (\n      evalPropTruthy(this._validateOnSubmit) ||\n      this.parent.validateOnSubmit ||\n      this.config.validateOnSubmit\n    );\n  }\n\n  config: Validation.Config;\n  elRef: ElementRef;\n  groupName: FormGroupName;\n  groupRef: FormGroupDirective;\n  parentRef: ValidationGroupDirective;\n  constructor(public injector: Injector) {\n    this.config = {\n      blueprints: injector.get(VALIDATION_BLUEPRINTS),\n      errorTemplate: injector.get(VALIDATION_ERROR_TEMPLATE),\n      invalidClasses: injector.get(VALIDATION_INVALID_CLASSES),\n      mapErrorsFn: injector.get(VALIDATION_MAP_ERRORS_FN),\n      targetSelector: injector.get(VALIDATION_TARGET_SELECTOR),\n      validateOnSubmit: injector.get(VALIDATION_VALIDATE_ON_SUBMIT),\n    };\n    this.elRef = injector.get(ElementRef);\n  }\n\n  getStream(streamName: Validation.StreamName): Observable<UntypedFormGroup> {\n    return merge(\n      this[streamName + '$']\n        ? (this[streamName + '$'] as ReplaySubject<UntypedFormGroup>).asObservable()\n        : NEVER,\n      this.parent.getStream(streamName) || NEVER,\n    );\n  }\n\n  ngOnDestroy() {}\n}\n","import { ChangeDetectionStrategy, Component, TrackByFunction, ViewEncapsulation } from '@angular/core';\nimport { Validation } from '../models';\n\n@Component({\n  selector: 'validation-error',\n  template: `\n    <div *ngFor=\"let error of errors; trackBy: trackByFn\" class=\"invalid-feedback\">{{ error.message }}</div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ValidationErrorComponent {\n  validationErrors: Validation.Error[];\n\n  trackByFn: TrackByFunction<Validation.Error> = (_, item) => item.key;\n\n  get errors(): Validation.Error[] {\n    return this.validationErrors || [];\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[validationTarget]',\n  exportAs: 'validationTarget',\n})\nexport class ValidationTargetDirective {\n  constructor(public vcRef: ViewContainerRef) {}\n}\n","import { ContentChild, Directive } from '@angular/core';\nimport { ValidationTargetDirective } from './validation-target.directive';\n\n@Directive({\n  selector: '[validationContainer]',\n  exportAs: 'validationContainer',\n})\nexport class ValidationContainerDirective {\n  @ContentChild(ValidationTargetDirective)\n  targetRef: ValidationTargetDirective;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  Injector,\n  OnDestroy,\n  Optional,\n  Self,\n  SkipSelf,\n} from '@angular/core';\nimport { UntypedFormGroup, FormGroupDirective, FormGroupName } from '@angular/forms';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { AbstractValidationDirective } from '../abstracts';\n\n@Directive({\n  /* tslint:disable-next-line */\n  selector: '[formGroup],[formGroupName]',\n  exportAs: 'validationGroup',\n})\nexport class ValidationGroupDirective extends AbstractValidationDirective\n  implements AfterViewInit, OnDestroy {\n  status$ = new ReplaySubject<UntypedFormGroup>(1);\n  submit$ = new ReplaySubject<UntypedFormGroup>(1);\n  value$ = new ReplaySubject<UntypedFormGroup>(1);\n\n  private subs = new Subscription();\n\n  constructor(\n    public injector: Injector,\n    public cdRef: ChangeDetectorRef,\n    @Optional()\n    @Self()\n    public groupName: FormGroupName,\n    @Optional()\n    @Self()\n    public groupRef: FormGroupDirective,\n    @Optional()\n    @SkipSelf()\n    public parentRef: ValidationGroupDirective,\n  ) {\n    super(injector);\n  }\n\n  private subscribeToFormSubmit() {\n    (this.elRef.nativeElement as HTMLFormElement).onsubmit = event => {\n      if (this.group.invalid) event.preventDefault();\n      this.submit$.next(this.group);\n      this.cdRef.markForCheck();\n    };\n  }\n\n  private subscribeToStatusChanges() {\n    this.subs.add(\n      this.group.statusChanges.subscribe(() => {\n        this.status$.next(this.group);\n        this.cdRef.markForCheck();\n      }),\n    );\n  }\n\n  private subscribeToValueChanges() {\n    this.subs.add(\n      this.group.valueChanges.subscribe(() => {\n        this.value$.next(this.group);\n        this.cdRef.markForCheck();\n      }),\n    );\n  }\n\n  ngAfterViewInit() {\n    if (!this.parentRef) this.subscribeToFormSubmit();\n    this.subscribeToStatusChanges();\n    this.subscribeToValueChanges();\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[validationStyle]',\n  exportAs: 'validationStyle',\n})\nexport class ValidationStyleDirective {\n  constructor(public elRef: ElementRef) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  Injector,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  Self,\n  SkipSelf,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { UntypedFormGroup, FormGroupDirective, NgControl, ValidationErrors } from '@angular/forms';\nimport { merge, Observable, Subscription } from 'rxjs';\nimport { filter, map, mapTo, tap } from 'rxjs/operators';\nimport { AbstractValidationDirective } from '../abstracts';\nimport { ValidationErrorComponent } from '../components';\nimport { Validation } from '../models';\nimport { generateValidationError } from '../utils';\nimport { ValidationContainerDirective } from './validation-container.directive';\nimport { ValidationGroupDirective } from './validation-group.directive';\nimport { ValidationStyleDirective } from './validation-style.directive';\nimport { ValidationTargetDirective } from './validation-target.directive';\n\n@Directive({\n  /* tslint:disable-next-line */\n  selector: '[formControl],[formControlName]',\n  exportAs: 'validationDirective',\n})\nexport class ValidationDirective\n  extends AbstractValidationDirective\n  implements AfterViewInit, OnDestroy\n{\n  private errorRef: ComponentRef<ValidationErrorComponent> | EmbeddedViewRef<any>;\n  private markElement: HTMLElement;\n  private isSubmitted = false;\n\n  get validation$(): Observable<UntypedFormGroup> {\n    return merge(\n      this.parent.getStream('status').pipe(mapTo(null)),\n      this.parent.getStream('value').pipe(mapTo(null)),\n      this.parent.getStream('submit'),\n    );\n  }\n\n  private subscriptions = new Subscription();\n\n  constructor(\n    public injector: Injector,\n    private cdRef: ChangeDetectorRef,\n    @Self() private control: NgControl,\n    private renderer: Renderer2,\n    private vcRef: ViewContainerRef,\n    @SkipSelf() public parentRef: ValidationGroupDirective,\n    @Optional() @SkipSelf() private markRef: ValidationStyleDirective,\n    @Optional() @SkipSelf() public targetRef: ValidationTargetDirective,\n    @Optional() private containerRef: ValidationContainerDirective,\n    @Optional() private formGroupDirective: FormGroupDirective,\n  ) {\n    super(injector);\n  }\n\n  private buildErrors(errors: ValidationErrors): Validation.Error[] {\n    return Object.keys(errors || {}).map(key =>\n      generateValidationError(key, errors[key], this.blueprints[key]),\n    );\n  }\n\n  private insertErrorClasses() {\n    this.renderer.addClass(this.markElement, this.invalidClasses);\n  }\n\n  private insertErrors(this: ValidationDirective, errors: Validation.Error[]): void {\n    const template = this.errorTemplate;\n    const targetRef = this.containerRef ? this.containerRef.targetRef : this.targetRef;\n    const vcRef = targetRef ? targetRef.vcRef : this.vcRef;\n\n    this.errorRef =\n      template instanceof TemplateRef\n        ? vcRef.createEmbeddedView(template, { $implicit: errors }, vcRef.length)\n        : vcRef.createComponent(template, { index: vcRef.length, injector: this.injector });\n\n    if (this.errorRef instanceof ComponentRef && this.errorRef.instance)\n      (this.errorRef as ComponentRef<any>).instance.validationErrors = errors;\n  }\n\n  private removeErrorClasses() {\n    this.renderer.removeClass(this.markElement, this.invalidClasses);\n  }\n\n  private removeErrors(): void {\n    if (this.errorRef) {\n      this.errorRef.destroy();\n      this.errorRef = null;\n    }\n  }\n\n  private setMarkElement(): void {\n    this.markElement =\n      (this.markRef\n        ? this.markRef.elRef.nativeElement\n        : this.targetSelector\n        ? this.elRef.nativeElement.closest(this.targetSelector)\n        : null) || this.elRef.nativeElement;\n  }\n\n  private shouldValidate(errors: Validation.Error[]) {\n    return errors.length && this.control.dirty && (!this.validateOnSubmit || this.isSubmitted);\n  }\n\n  private subscribeToValidation(): void {\n    let cached: string;\n\n    this.subscriptions.add(\n      this.validation$\n        .pipe(\n          filter(() => !this.skipValidation),\n          tap(form => {\n            if (form && this.formGroupDirective.submitted) {\n              this.control.control.markAsDirty();\n              this.isSubmitted = true;\n            }\n          }),\n          map(() =>\n            this.mapErrorsFn(\n              this.buildErrors(this.control.errors),\n              this.buildErrors((this.parentRef.group || ({} as UntypedFormGroup)).errors),\n              this.control,\n            ),\n          ),\n        )\n        .subscribe(errors => {\n          if (cached === JSON.stringify(errors)) return;\n\n          this.removeErrors();\n\n          if (this.shouldValidate(errors)) {\n            this.insertErrors(errors);\n            if (!cached) this.insertErrorClasses();\n            cached = JSON.stringify(errors);\n          } else {\n            this.removeErrorClasses();\n            cached = '';\n          }\n\n          this.cdRef.markForCheck();\n        }),\n    );\n  }\n\n  ngAfterViewInit() {\n    this.setMarkElement();\n    this.subscribeToValidation();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AbstractValidationDirective } from './abstracts/abstract-validation.directive';\nimport { ValidationErrorComponent } from './components/validation-error.component';\nimport { BLUEPRINTS } from './constants/blueprints';\nimport { ValidationContainerDirective } from './directives/validation-container.directive';\nimport { ValidationGroupDirective } from './directives/validation-group.directive';\nimport { ValidationStyleDirective } from './directives/validation-style.directive';\nimport { ValidationTargetDirective } from './directives/validation-target.directive';\nimport { ValidationDirective } from './directives/validation.directive';\nimport { Validation } from './models/validation.model';\nimport { VALIDATION_BLUEPRINTS } from './tokens/blueprints.token';\nimport { VALIDATION_ERROR_TEMPLATE } from './tokens/error-template.token';\nimport { VALIDATION_INVALID_CLASSES } from './tokens/invalid-classes.token';\nimport { VALIDATION_MAP_ERRORS_FN } from './tokens/map-errors-fn.token';\nimport { VALIDATION_TARGET_SELECTOR } from './tokens/target-selector.token';\nimport { VALIDATION_VALIDATE_ON_SUBMIT } from './tokens/validate-on-submit.token';\nimport { defaultMapErrorsFn } from './utils/mappers';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  exports: [\n    ValidationContainerDirective,\n    ValidationGroupDirective,\n    ValidationStyleDirective,\n    ValidationTargetDirective,\n    ValidationDirective,\n  ],\n  declarations: [\n    ValidationErrorComponent,\n    AbstractValidationDirective,\n    ValidationContainerDirective,\n    ValidationGroupDirective,\n    ValidationStyleDirective,\n    ValidationTargetDirective,\n    ValidationDirective,\n  ],\n})\nexport class NgxValidateCoreModule {\n  static forRoot(config = {} as Validation.Config): ModuleWithProviders<NgxValidateCoreModule> {\n    return {\n      ngModule: NgxValidateCoreModule,\n      providers: [\n        {\n          provide: VALIDATION_BLUEPRINTS,\n          useValue: config.blueprints || BLUEPRINTS,\n        },\n        {\n          provide: VALIDATION_ERROR_TEMPLATE,\n          useValue: config.errorTemplate || ValidationErrorComponent,\n        },\n        {\n          provide: VALIDATION_INVALID_CLASSES,\n          useValue: config.invalidClasses || 'is-invalid',\n        },\n        {\n          provide: VALIDATION_MAP_ERRORS_FN,\n          useValue: config.mapErrorsFn || defaultMapErrorsFn,\n        },\n        {\n          provide: VALIDATION_TARGET_SELECTOR,\n          useValue: config.targetSelector,\n        },\n        {\n          provide: VALIDATION_VALIDATE_ON_SUBMIT,\n          useValue: config.validateOnSubmit,\n        },\n      ],\n    };\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from '@angular/forms';\nimport { addCommas, normalizeDiacritics } from '../utils';\n\nexport function comparePasswords([controlName1, controlName2]: string[]): ValidatorFn {\n  return (group: UntypedFormGroup) => {\n    const password = group.get(controlName1).value;\n    const repeat = group.get(controlName2).value;\n\n    return !password || !repeat || password === repeat\n      ? null\n      : {\n          passwordMismatch: {\n            fields: [controlName1, controlName2],\n          },\n        };\n  };\n}\n\nexport type PasswordRules = ('small' | 'capital' | 'number' | 'special')[];\n\nexport function validatePassword(\n  shouldContain: PasswordRules = ['small', 'capital', 'number', 'special'],\n): ValidatorFn {\n  return (control: AbstractControl) => {\n    if (!control.value) return null;\n\n    const value = normalizeDiacritics(control.value);\n\n    const regex = {\n      small: /.*[a-z].*/,\n      capital: /.*[A-Z].*/,\n      number: /.*[0-9].*/,\n      special: /.*[^0-9a-zA-Z].*/,\n    };\n\n    const missing: string[] = shouldContain.filter(key => !regex[key].test(value));\n\n    return missing.length\n      ? {\n          invalidPassword: {\n            missing,\n            description: addCommas(\n              missing.map(\n                key =>\n                  ({\n                    small: 'a small letter',\n                    capital: 'a capital',\n                    number: 'a number',\n                    special: 'a special character',\n                  }[key]),\n              ),\n            ),\n          },\n        }\n      : null;\n  };\n}\n","/*\n * Public API Surface of core\n */\n\nexport * from './lib/abstracts';\nexport * from './lib/components';\nexport * from './lib/constants';\nexport * from './lib/core.module';\nexport * from './lib/directives';\nexport * from './lib/models';\nexport * from './lib/tokens';\nexport * from './lib/utils';\nexport * from './lib/validators';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2.ValidationGroupDirective","i3.ValidationStyleDirective","i4.ValidationTargetDirective","i5.ValidationContainerDirective"],"mappings":"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"}
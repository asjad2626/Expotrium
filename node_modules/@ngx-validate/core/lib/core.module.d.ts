import { ModuleWithProviders } from '@angular/core';
import { Validation } from './models/validation.model';
import * as i0 from "@angular/core";
import * as i1 from "./components/validation-error.component";
import * as i2 from "./abstracts/abstract-validation.directive";
import * as i3 from "./directives/validation-container.directive";
import * as i4 from "./directives/validation-group.directive";
import * as i5 from "./directives/validation-style.directive";
import * as i6 from "./directives/validation-target.directive";
import * as i7 from "./directives/validation.directive";
import * as i8 from "@angular/common";
import * as i9 from "@angular/forms";
export declare class NgxValidateCoreModule {
    static forRoot(config?: Partial<{
        blueprints: Validation.Blueprints;
        errorTemplate: import("@angular/core").Type<any> | import("@angular/core").TemplateRef<any>;
        invalidClasses: string;
        mapErrorsFn: Validation.MapErrorsFn;
        skipValidation: boolean;
        targetSelector: string;
        validateOnSubmit: boolean;
    }>): ModuleWithProviders<NgxValidateCoreModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxValidateCoreModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgxValidateCoreModule, [typeof i1.ValidationErrorComponent, typeof i2.AbstractValidationDirective, typeof i3.ValidationContainerDirective, typeof i4.ValidationGroupDirective, typeof i5.ValidationStyleDirective, typeof i6.ValidationTargetDirective, typeof i7.ValidationDirective], [typeof i8.CommonModule, typeof i9.FormsModule, typeof i9.ReactiveFormsModule], [typeof i3.ValidationContainerDirective, typeof i4.ValidationGroupDirective, typeof i5.ValidationStyleDirective, typeof i6.ValidationTargetDirective, typeof i7.ValidationDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgxValidateCoreModule>;
}

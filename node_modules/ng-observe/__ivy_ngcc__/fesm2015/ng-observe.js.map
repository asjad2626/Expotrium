{"version":3,"file":"ng-observe.js","sources":["../../../projects/ng-observe/src/lib/ng-observe.ts","../../../projects/ng-observe/src/ng-observe.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  NgZone,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport { isObservable, Observable, Subscription } from 'rxjs';\n\nexport const HASH_FN = new InjectionToken<HashFn>('HASH_FN', {\n  providedIn: 'root',\n  factory: createHashFn,\n});\n\nconst BRAND = '__ngObserve__';\n\n// @dynamic\n@Injectable()\nexport class ObserveService implements OnDestroy {\n  private hooks = new Map<string | number, () => void>();\n  private detectChanges = () => this.cdRef.detectChanges();\n\n  collection: ObserveCollectionFn = (sources, options = {} as any) => {\n    const sink: any = Array.isArray(sources) ? [] : {};\n    Object.defineProperty(sink, BRAND, {\n      value: true,\n      enumerable: false,\n      writable: false,\n    });\n\n    const observe = this.observe(sink);\n    Object.keys(sources).forEach(key => {\n      const source: any = sources[key as keyof typeof sources];\n      const option: any = options[key as keyof typeof options];\n      observe(key, source, option);\n    });\n\n    return sink;\n  };\n\n  value: ObserveValueFn = <Value>(\n    source: Observable<Value>,\n    options?: ObserveValueOptions\n  ): Observed<Value> => {\n    const sink = {};\n\n    this.observe(sink)('value', source, options);\n\n    return toValue(sink, 'value');\n  };\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    @Inject(HASH_FN) private hash: HashFn,\n    @Optional() zone: NgZone\n  ) {\n    if (zone instanceof NgZone) {\n      this.detectChanges = () => this.cdRef.markForCheck();\n    }\n  }\n\n  private createUniqueId(key: string | number | symbol): string {\n    try {\n      throw new Error();\n    } catch (e) {\n      return String(this.hash(e.stack + String(key)));\n    }\n  }\n\n  private observe(sink: any): Observe {\n    const fn = <Value>(\n      key: string | number | symbol,\n      source: Observable<Value>,\n      { uniqueId = this.createUniqueId(key), errorHandler = () => {} }: ObserveValueOptions = {}\n    ) => {\n      let subscription = new Subscription();\n      const noop = () => {};\n      const unsubscribe = () => subscription.unsubscribe();\n      const complete = () => {\n        (this.hooks.get(uniqueId) || noop)();\n        this.hooks.delete(uniqueId);\n      };\n\n      complete();\n      this.hooks.set(uniqueId, unsubscribe);\n\n      // tslint:disable-next-line: deprecation\n      subscription = source.subscribe({\n        next: x => {\n          sink[key] = x;\n          this.detectChanges();\n        },\n        error: errorHandler,\n        complete,\n      });\n    };\n\n    return fn;\n  }\n\n  ngOnDestroy(): void {\n    this.hooks.forEach(unsubscribe => unsubscribe());\n  }\n}\n\nexport const OBSERVE = new InjectionToken<ObserveFn>('OBSERVE');\n\nexport const OBSERVE_PROVIDER = [\n  ObserveService,\n  {\n    provide: OBSERVE,\n    useFactory: observeFactory,\n    deps: [ObserveService],\n  },\n];\n\nexport function observeFactory(service: ObserveService): ObserveFn {\n  return <ValueOrCollection extends any>(\n    source: Observable<ValueOrCollection> | ObservableCollection<ValueOrCollection>,\n    options?: ObserveValueOptions | ObserveCollectionOptions<ValueOrCollection>\n  ) =>\n    isObservable(source)\n      ? service.value(source, options as ObserveValueOptions)\n      : service.collection(source, options as ObserveCollectionOptions<ValueOrCollection>);\n}\n\ntype ObserveCollectionFn = <Collection>(\n  source: ObservableCollection<Collection>,\n  options?: ObserveCollectionOptions<Collection>\n) => Collection;\n\ntype ObserveValueFn = <Value>(\n  source: Observable<Value>,\n  options?: ObserveValueOptions\n) => Observed<Value>;\n\nexport type ObserveFn = <Source extends Observable<any> | ObservableCollection<any>>(\n  source: Source,\n  options?: ObserveFnOptions<Source>\n) => ObserveFnReturnValue<Source>;\n\ntype Observe = <Value>(\n  key: string | number | symbol,\n  source: Observable<Value>,\n  options?: ObserveValueOptions\n) => void;\n\nexport type ObservableCollection<Collection> = Collection extends Array<infer Value>\n  ? Array<Observable<Value>>\n  : { [Key in keyof Collection]: Observable<Collection[Key]> };\n\nexport type ObserveCollectionOptions<Collection> = Collection extends Array<any>\n  ? Array<ObserveValueOptions>\n  : { [Key in keyof Collection]?: ObserveValueOptions };\n\nexport type ObservedValues<Collection> = Collection extends Array<infer Value>\n  ? Array<Observed<Value>>\n  : { [Key in keyof Collection]: Observed<Collection[Key]> };\n\nexport interface ObserveValueOptions {\n  errorHandler?: (err: any) => void;\n  uniqueId?: string;\n}\n\nexport type ObserveFnOptions<Source> = Source extends Observable<any>\n  ? ObserveValueOptions\n  : Source extends ObservableCollection<infer Collection>\n  ? ObserveCollectionOptions<Collection>\n  : never;\n\nexport type ObserveFnReturnValue<Source> = Source extends Observable<infer Value>\n  ? Observed<Value>\n  : Source extends ObservableCollection<infer Collection>\n  ? Collection\n  : never;\n\nexport class Observed<Value, Seed = unknown> {\n  private readonly getter: () => Value;\n\n  constructor(private readonly seed: Seed, mapFn: (source: typeof seed) => Value) {\n    this.getter = () => mapFn(this.seed);\n  }\n\n  get value(): Value {\n    return this.getter();\n  }\n}\n\nexport type HashFn = (input: string) => number;\n\nexport function createHashFn(): HashFn {\n  const k = 2654435761;\n  const shift = Math.imul ? (n: number) => Math.imul(n, k) : (n: number) => imul(n, k);\n\n  const hashFn = (input: string) => {\n    let index = input.length;\n    let hash = 0xabadcafe;\n\n    while (index--) {\n      hash = shift(hash ^ input.charCodeAt(index));\n    }\n\n    return (hash ^ (hash >>> 16)) >>> 0;\n  };\n\n  return hashFn;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\nexport function imul(a: number, b: number): number {\n  b |= 0;\n\n  let result = (a & 0x003fffff) * b;\n  if (a & 0xffc00000) {\n    result += ((a & 0xffc00000) * b) | 0;\n  }\n\n  return result | 0;\n}\n\nexport function isCollection(source: any): boolean {\n  return Boolean(source && source[BRAND]);\n}\n\nexport function toMappedValue<Value, Seed extends Array<any> | Record<string, any>>(\n  collection: Seed,\n  mapFn: (source: typeof collection) => Value\n): Observed<Value> {\n  return new Observed(collection as any, mapFn);\n}\n\nexport function toValue<Value>(collection: Array<Value>, key: number): Observed<Value>;\nexport function toValue<Value>(collection: Record<string, Value>, key: string): Observed<Value>;\nexport function toValue<Value>(\n  collection: Array<Value> | Record<string, Value>,\n  key: number | string\n): Observed<Value> {\n  return new Observed(collection as any, source => source[key]);\n}\n\nexport function toValues<Collection extends any[]>(\n  collection: Collection\n): ObservedValues<Collection>;\nexport function toValues<Collection extends Record<string, any>>(\n  collection: Collection\n): ObservedValues<Collection>;\nexport function toValues<Value>(\n  collection: Value[] | Record<string, Value>\n): ObservedValues<Value[] | Record<string, Value>> {\n  if (Array.isArray(collection)) {\n    return collection.map((_, index) => new Observed(collection, source => source[index]));\n  }\n\n  const values: Record<string, Observed<Value>> = {};\n\n  for (const key in collection) {\n    if (collection.hasOwnProperty(key)) {\n      values[key] = new Observed(collection, source => source[key]);\n    }\n  }\n\n  return values;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}
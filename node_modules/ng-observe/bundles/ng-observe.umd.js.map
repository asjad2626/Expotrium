{"version":3,"file":"ng-observe.umd.js","sources":["../../../projects/ng-observe/src/lib/ng-observe.ts","../../../projects/ng-observe/src/ng-observe.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  NgZone,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport { isObservable, Observable, Subscription } from 'rxjs';\n\nexport const HASH_FN = new InjectionToken<HashFn>('HASH_FN', {\n  providedIn: 'root',\n  factory: createHashFn,\n});\n\nconst BRAND = '__ngObserve__';\n\n// @dynamic\n@Injectable()\nexport class ObserveService implements OnDestroy {\n  private hooks = new Map<string | number, () => void>();\n  private detectChanges = () => this.cdRef.detectChanges();\n\n  collection: ObserveCollectionFn = (sources, options = {} as any) => {\n    const sink: any = Array.isArray(sources) ? [] : {};\n    Object.defineProperty(sink, BRAND, {\n      value: true,\n      enumerable: false,\n      writable: false,\n    });\n\n    const observe = this.observe(sink);\n    Object.keys(sources).forEach(key => {\n      const source: any = sources[key as keyof typeof sources];\n      const option: any = options[key as keyof typeof options];\n      observe(key, source, option);\n    });\n\n    return sink;\n  };\n\n  value: ObserveValueFn = <Value>(\n    source: Observable<Value>,\n    options?: ObserveValueOptions\n  ): Observed<Value> => {\n    const sink = {};\n\n    this.observe(sink)('value', source, options);\n\n    return toValue(sink, 'value');\n  };\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    @Inject(HASH_FN) private hash: HashFn,\n    @Optional() zone: NgZone\n  ) {\n    if (zone instanceof NgZone) {\n      this.detectChanges = () => this.cdRef.markForCheck();\n    }\n  }\n\n  private createUniqueId(key: string | number | symbol): string {\n    try {\n      throw new Error();\n    } catch (e) {\n      return String(this.hash(e.stack + String(key)));\n    }\n  }\n\n  private observe(sink: any): Observe {\n    const fn = <Value>(\n      key: string | number | symbol,\n      source: Observable<Value>,\n      { uniqueId = this.createUniqueId(key), errorHandler = () => {} }: ObserveValueOptions = {}\n    ) => {\n      let subscription = new Subscription();\n      const noop = () => {};\n      const unsubscribe = () => subscription.unsubscribe();\n      const complete = () => {\n        (this.hooks.get(uniqueId) || noop)();\n        this.hooks.delete(uniqueId);\n      };\n\n      complete();\n      this.hooks.set(uniqueId, unsubscribe);\n\n      // tslint:disable-next-line: deprecation\n      subscription = source.subscribe({\n        next: x => {\n          sink[key] = x;\n          this.detectChanges();\n        },\n        error: errorHandler,\n        complete,\n      });\n    };\n\n    return fn;\n  }\n\n  ngOnDestroy(): void {\n    this.hooks.forEach(unsubscribe => unsubscribe());\n  }\n}\n\nexport const OBSERVE = new InjectionToken<ObserveFn>('OBSERVE');\n\nexport const OBSERVE_PROVIDER = [\n  ObserveService,\n  {\n    provide: OBSERVE,\n    useFactory: observeFactory,\n    deps: [ObserveService],\n  },\n];\n\nexport function observeFactory(service: ObserveService): ObserveFn {\n  return <ValueOrCollection extends any>(\n    source: Observable<ValueOrCollection> | ObservableCollection<ValueOrCollection>,\n    options?: ObserveValueOptions | ObserveCollectionOptions<ValueOrCollection>\n  ) =>\n    isObservable(source)\n      ? service.value(source, options as ObserveValueOptions)\n      : service.collection(source, options as ObserveCollectionOptions<ValueOrCollection>);\n}\n\ntype ObserveCollectionFn = <Collection>(\n  source: ObservableCollection<Collection>,\n  options?: ObserveCollectionOptions<Collection>\n) => Collection;\n\ntype ObserveValueFn = <Value>(\n  source: Observable<Value>,\n  options?: ObserveValueOptions\n) => Observed<Value>;\n\nexport type ObserveFn = <Source extends Observable<any> | ObservableCollection<any>>(\n  source: Source,\n  options?: ObserveFnOptions<Source>\n) => ObserveFnReturnValue<Source>;\n\ntype Observe = <Value>(\n  key: string | number | symbol,\n  source: Observable<Value>,\n  options?: ObserveValueOptions\n) => void;\n\nexport type ObservableCollection<Collection> = Collection extends Array<infer Value>\n  ? Array<Observable<Value>>\n  : { [Key in keyof Collection]: Observable<Collection[Key]> };\n\nexport type ObserveCollectionOptions<Collection> = Collection extends Array<any>\n  ? Array<ObserveValueOptions>\n  : { [Key in keyof Collection]?: ObserveValueOptions };\n\nexport type ObservedValues<Collection> = Collection extends Array<infer Value>\n  ? Array<Observed<Value>>\n  : { [Key in keyof Collection]: Observed<Collection[Key]> };\n\nexport interface ObserveValueOptions {\n  errorHandler?: (err: any) => void;\n  uniqueId?: string;\n}\n\nexport type ObserveFnOptions<Source> = Source extends Observable<any>\n  ? ObserveValueOptions\n  : Source extends ObservableCollection<infer Collection>\n  ? ObserveCollectionOptions<Collection>\n  : never;\n\nexport type ObserveFnReturnValue<Source> = Source extends Observable<infer Value>\n  ? Observed<Value>\n  : Source extends ObservableCollection<infer Collection>\n  ? Collection\n  : never;\n\nexport class Observed<Value, Seed = unknown> {\n  private readonly getter: () => Value;\n\n  constructor(private readonly seed: Seed, mapFn: (source: typeof seed) => Value) {\n    this.getter = () => mapFn(this.seed);\n  }\n\n  get value(): Value {\n    return this.getter();\n  }\n}\n\nexport type HashFn = (input: string) => number;\n\nexport function createHashFn(): HashFn {\n  const k = 2654435761;\n  const shift = Math.imul ? (n: number) => Math.imul(n, k) : (n: number) => imul(n, k);\n\n  const hashFn = (input: string) => {\n    let index = input.length;\n    let hash = 0xabadcafe;\n\n    while (index--) {\n      hash = shift(hash ^ input.charCodeAt(index));\n    }\n\n    return (hash ^ (hash >>> 16)) >>> 0;\n  };\n\n  return hashFn;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\nexport function imul(a: number, b: number): number {\n  b |= 0;\n\n  let result = (a & 0x003fffff) * b;\n  if (a & 0xffc00000) {\n    result += ((a & 0xffc00000) * b) | 0;\n  }\n\n  return result | 0;\n}\n\nexport function isCollection(source: any): boolean {\n  return Boolean(source && source[BRAND]);\n}\n\nexport function toMappedValue<Value, Seed extends Array<any> | Record<string, any>>(\n  collection: Seed,\n  mapFn: (source: typeof collection) => Value\n): Observed<Value> {\n  return new Observed(collection as any, mapFn);\n}\n\nexport function toValue<Value>(collection: Array<Value>, key: number): Observed<Value>;\nexport function toValue<Value>(collection: Record<string, Value>, key: string): Observed<Value>;\nexport function toValue<Value>(\n  collection: Array<Value> | Record<string, Value>,\n  key: number | string\n): Observed<Value> {\n  return new Observed(collection as any, source => source[key]);\n}\n\nexport function toValues<Collection extends any[]>(\n  collection: Collection\n): ObservedValues<Collection>;\nexport function toValues<Collection extends Record<string, any>>(\n  collection: Collection\n): ObservedValues<Collection>;\nexport function toValues<Value>(\n  collection: Value[] | Record<string, Value>\n): ObservedValues<Value[] | Record<string, Value>> {\n  if (Array.isArray(collection)) {\n    return collection.map((_, index) => new Observed(collection, source => source[index]));\n  }\n\n  const values: Record<string, Observed<Value>> = {};\n\n  for (const key in collection) {\n    if (collection.hasOwnProperty(key)) {\n      values[key] = new Observed(collection, source => source[key]);\n    }\n  }\n\n  return values;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","NgZone","Subscription","Injectable","ChangeDetectorRef","Inject","Optional","isObservable"],"mappings":"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"}
import { BaseThemeSharedModule, DateParserFormatter, DEFAULT_VALIDATION_BLUEPRINTS, THEME_SHARED_ROUTE_PROVIDERS, } from '@abp/ng.theme.shared';
import { NgModule } from '@angular/core';
import { RouterTestingModule } from '@angular/router/testing';
import { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
import { defaultMapErrorsFn, VALIDATION_BLUEPRINTS, VALIDATION_MAP_ERRORS_FN, VALIDATION_VALIDATE_ON_SUBMIT, } from '@ngx-validate/core';
import * as i0 from "@angular/core";
/**
 * ThemeSharedTestingModule is the module that will be used in tests
 */
export class ThemeSharedTestingModule {
    static withConfig({ validation = {} } = {}) {
        return {
            ngModule: ThemeSharedTestingModule,
            providers: [
                THEME_SHARED_ROUTE_PROVIDERS,
                { provide: NgbDateParserFormatter, useClass: DateParserFormatter },
                {
                    provide: VALIDATION_BLUEPRINTS,
                    useValue: {
                        ...DEFAULT_VALIDATION_BLUEPRINTS,
                        ...(validation.blueprints || {}),
                    },
                },
                {
                    provide: VALIDATION_MAP_ERRORS_FN,
                    useValue: validation.mapErrorsFn || defaultMapErrorsFn,
                },
                {
                    provide: VALIDATION_VALIDATE_ON_SUBMIT,
                    useValue: validation.validateOnSubmit,
                },
            ],
        };
    }
}
ThemeSharedTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: ThemeSharedTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ThemeSharedTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.3", ngImport: i0, type: ThemeSharedTestingModule, imports: [RouterTestingModule, BaseThemeSharedModule], exports: [RouterTestingModule, BaseThemeSharedModule] });
ThemeSharedTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: ThemeSharedTestingModule, imports: [RouterTestingModule, BaseThemeSharedModule, RouterTestingModule, BaseThemeSharedModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: ThemeSharedTestingModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: [RouterTestingModule, BaseThemeSharedModule],
                    imports: [RouterTestingModule, BaseThemeSharedModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtc2hhcmVkLXRlc3RpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtc2hhcmVkL3Rlc3Rpbmcvc3JjL2xpYi90aGVtZS1zaGFyZWQtdGVzdGluZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixtQkFBbUIsRUFDbkIsNkJBQTZCLEVBQzdCLDRCQUE0QixHQUM3QixNQUFNLHNCQUFzQixDQUFDO0FBQzlCLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFDTCxrQkFBa0IsRUFDbEIscUJBQXFCLEVBQ3JCLHdCQUF3QixFQUN4Qiw2QkFBNkIsR0FDOUIsTUFBTSxvQkFBb0IsQ0FBQzs7QUFHNUI7O0dBRUc7QUFLSCxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DLE1BQU0sQ0FBQyxVQUFVLENBQ2YsRUFBRSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQVk7UUFFbEMsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsU0FBUyxFQUFFO2dCQUNULDRCQUE0QjtnQkFDNUIsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFO2dCQUNsRTtvQkFDRSxPQUFPLEVBQUUscUJBQXFCO29CQUM5QixRQUFRLEVBQUU7d0JBQ1IsR0FBRyw2QkFBNkI7d0JBQ2hDLEdBQUcsQ0FBQyxVQUFVLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQztxQkFDakM7aUJBQ0Y7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLHdCQUF3QjtvQkFDakMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksa0JBQWtCO2lCQUN2RDtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsNkJBQTZCO29CQUN0QyxRQUFRLEVBQUUsVUFBVSxDQUFDLGdCQUFnQjtpQkFDdEM7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOztxSEExQlUsd0JBQXdCO3NIQUF4Qix3QkFBd0IsWUFGekIsbUJBQW1CLEVBQUUscUJBQXFCLGFBRDFDLG1CQUFtQixFQUFFLHFCQUFxQjtzSEFHekMsd0JBQXdCLFlBRnpCLG1CQUFtQixFQUFFLHFCQUFxQixFQUQxQyxtQkFBbUIsRUFBRSxxQkFBcUI7MkZBR3pDLHdCQUF3QjtrQkFKcEMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBQztvQkFDckQsT0FBTyxFQUFFLENBQUMsbUJBQW1CLEVBQUUscUJBQXFCLENBQUM7aUJBQ3REIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBCYXNlVGhlbWVTaGFyZWRNb2R1bGUsXHJcbiAgRGF0ZVBhcnNlckZvcm1hdHRlcixcclxuICBERUZBVUxUX1ZBTElEQVRJT05fQkxVRVBSSU5UUyxcclxuICBUSEVNRV9TSEFSRURfUk9VVEVfUFJPVklERVJTLFxyXG59IGZyb20gJ0BhYnAvbmcudGhlbWUuc2hhcmVkJztcclxuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUm91dGVyVGVzdGluZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlci90ZXN0aW5nJztcclxuaW1wb3J0IHsgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHtcclxuICBkZWZhdWx0TWFwRXJyb3JzRm4sXHJcbiAgVkFMSURBVElPTl9CTFVFUFJJTlRTLFxyXG4gIFZBTElEQVRJT05fTUFQX0VSUk9SU19GTixcclxuICBWQUxJREFUSU9OX1ZBTElEQVRFX09OX1NVQk1JVCxcclxufSBmcm9tICdAbmd4LXZhbGlkYXRlL2NvcmUnO1xyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICcuL21vZGVscy9jb25maWcnO1xyXG5cclxuLyoqXHJcbiAqIFRoZW1lU2hhcmVkVGVzdGluZ01vZHVsZSBpcyB0aGUgbW9kdWxlIHRoYXQgd2lsbCBiZSB1c2VkIGluIHRlc3RzXHJcbiAqL1xyXG5ATmdNb2R1bGUoe1xyXG4gIGV4cG9ydHM6IFtSb3V0ZXJUZXN0aW5nTW9kdWxlLCBCYXNlVGhlbWVTaGFyZWRNb2R1bGVdLFxyXG4gIGltcG9ydHM6IFtSb3V0ZXJUZXN0aW5nTW9kdWxlLCBCYXNlVGhlbWVTaGFyZWRNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGhlbWVTaGFyZWRUZXN0aW5nTW9kdWxlIHtcclxuICBzdGF0aWMgd2l0aENvbmZpZyhcclxuICAgIHsgdmFsaWRhdGlvbiA9IHt9IH0gPSB7fSBhcyBDb25maWcsXHJcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxUaGVtZVNoYXJlZFRlc3RpbmdNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBUaGVtZVNoYXJlZFRlc3RpbmdNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIFRIRU1FX1NIQVJFRF9ST1VURV9QUk9WSURFUlMsXHJcbiAgICAgICAgeyBwcm92aWRlOiBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLCB1c2VDbGFzczogRGF0ZVBhcnNlckZvcm1hdHRlciB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IFZBTElEQVRJT05fQkxVRVBSSU5UUyxcclxuICAgICAgICAgIHVzZVZhbHVlOiB7XHJcbiAgICAgICAgICAgIC4uLkRFRkFVTFRfVkFMSURBVElPTl9CTFVFUFJJTlRTLFxyXG4gICAgICAgICAgICAuLi4odmFsaWRhdGlvbi5ibHVlcHJpbnRzIHx8IHt9KSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiBWQUxJREFUSU9OX01BUF9FUlJPUlNfRk4sXHJcbiAgICAgICAgICB1c2VWYWx1ZTogdmFsaWRhdGlvbi5tYXBFcnJvcnNGbiB8fCBkZWZhdWx0TWFwRXJyb3JzRm4sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiBWQUxJREFUSU9OX1ZBTElEQVRFX09OX1NVQk1JVCxcclxuICAgICAgICAgIHVzZVZhbHVlOiB2YWxpZGF0aW9uLnZhbGlkYXRlT25TdWJtaXQsXHJcbiAgICAgICAgfSxcclxuICAgICAgXSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==
{"version":3,"file":"abp-ng.theme.lepton-x.mjs","sources":["../../../../libs/abp-lepton-x/src/lib/components/validation-error/validation-error.component.ts","../../../../libs/abp-lepton-x/src/lib/components/validation-error/validation-error.module.ts","../../../../libs/abp-lepton-x/src/lib/services/user-profile.service.ts","../../../../libs/abp-lepton-x/src/lib/providers/user.provider.ts","../../../../libs/abp-lepton-x/src/lib/services/language.service.ts","../../../../libs/abp-lepton-x/src/lib/providers/language.provider.ts","../../../../libs/abp-lepton-x/src/lib/services/translate.service.ts","../../../../libs/abp-lepton-x/src/lib/providers/translate.provider.ts","../../../../libs/abp-lepton-x/src/lib/enums/user-menu-items.ts","../../../../libs/abp-lepton-x/src/lib/providers/user-menu-service.provider.ts","../../../../libs/abp-lepton-x/src/lib/theme-lepton-x.module.ts","../../../../libs/abp-lepton-x/src/index.ts","../../../../libs/abp-lepton-x/src/abp-ng.theme.lepton-x.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { Validation, ValidationErrorComponent as ErrorComponent } from '@ngx-validate/core';\r\n\r\n@Component({\r\n  selector: 'abp-validation-error',\r\n  template: `\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngFor=\"let error of abpErrors; trackBy: trackByFn\"\r\n    >\r\n      {{ error.message | abpLocalization: error.interpoliteParams }}\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ValidationErrorComponent extends ErrorComponent {\r\n  get abpErrors(): Array<Validation.Error & { interpoliteParams: string[] }> {\r\n    if (!this.errors || !this.errors.length) return [];\r\n\r\n    return this.errors.map((error) => {\r\n      if (!error.message) return { ...error, interpoliteParams: [] };\r\n\r\n      const index = error.message.indexOf('[');\r\n\r\n      if (index > -1) {\r\n        return {\r\n          ...error,\r\n          message: error.message.slice(0, index),\r\n          interpoliteParams: error.message\r\n            .slice(index + 1, error.message.length - 1)\r\n            .split(','),\r\n        };\r\n      }\r\n\r\n      return { ...error, interpoliteParams: [] };\r\n    });\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ValidationErrorComponent } from './validation-error.component';\r\nimport {\r\n  NgxValidateCoreModule,\r\n  VALIDATION_ERROR_TEMPLATE,\r\n  VALIDATION_INVALID_CLASSES,\r\n  VALIDATION_TARGET_SELECTOR,\r\n} from '@ngx-validate/core';\r\nimport { CoreModule } from '@abp/ng.core';\r\n\r\n@NgModule({\r\n  declarations: [ValidationErrorComponent],\r\n  imports: [CommonModule, CoreModule, NgxValidateCoreModule],\r\n  exports: [ValidationErrorComponent, NgxValidateCoreModule],\r\n})\r\nexport class ValidationErrorModule {\r\n  static forRoot(): ModuleWithProviders<ValidationErrorModule> {\r\n    return {\r\n      ngModule: ValidationErrorModule,\r\n      providers: [\r\n        {\r\n          provide: VALIDATION_ERROR_TEMPLATE,\r\n          useValue: ValidationErrorComponent,\r\n        },\r\n        {\r\n          provide: VALIDATION_TARGET_SELECTOR,\r\n          useValue: '*:has(> .form-control)', \r\n        },\r\n        {\r\n          provide: VALIDATION_INVALID_CLASSES,\r\n          useValue: 'is-invalid',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  AuthService,\r\n  ConfigStateService,\r\n  CurrentUserDto,\r\n  NAVIGATE_TO_MANAGE_PROFILE,\r\n} from '@abp/ng.core';\r\nimport { UserProfileService } from '@volo/ngx-lepton-x.core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { UserMenuService } from '@abp/ng.theme.shared';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpUserProfileService {\r\n  currentUser$: Observable<CurrentUserDto> =\r\n    this.configState.getOne$('currentUser');\r\n\r\n  constructor(\r\n    private configState: ConfigStateService,\r\n    private userProfileService: UserProfileService,\r\n    private authService: AuthService,\r\n    @Inject(NAVIGATE_TO_MANAGE_PROFILE) public navigateToManageProfile: any,\r\n    private oAuthService: OAuthService,\r\n    private userMenuService: UserMenuService\r\n  ) {}\r\n\r\n  subscribeUser() {\r\n    combineLatest([\r\n      this.currentUser$.pipe(filter<CurrentUserDto>(Boolean)),\r\n      this.userMenuService.items$,\r\n    ]).subscribe(([user, userMenuItems]) => {\r\n      const userActionGroups = userMenuItems.reduce(\r\n        (acc, curr) => {\r\n          const menuItem = {\r\n            icon: curr.textTemplate?.icon,\r\n            text: curr.textTemplate?.text,\r\n            component: curr?.component,\r\n            action: () => {\r\n              curr.action();\r\n              return of(true);\r\n            },\r\n          };\r\n          acc[0].push(menuItem);\r\n          return acc;\r\n        },\r\n        [[]]\r\n      );\r\n      this.userProfileService.setUser({\r\n        fullName: user.name || user.userName || '',\r\n        email: user.email || '',\r\n        userName: user.userName || '',\r\n        avatar: {\r\n          type: 'icon',\r\n          source: 'bi bi-person-circle',\r\n        },\r\n        userActionGroups,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { AbpUserProfileService } from '../services/user-profile.service';\r\n\r\nexport const LPX_USER_PROVIDER = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  deps: [Injector],\r\n  useFactory: initUser,\r\n};\r\n\r\nfunction initUser(injector: Injector) {\r\n  const userProfile = injector.get(AbpUserProfileService);\r\n  return () => {\r\n    userProfile.subscribeUser();\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfigStateService, getLocaleDirection, LanguageInfo, SessionStateService } from '@abp/ng.core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LanguageService, LpxLanguage } from '@volo/ngx-lepton-x.core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpLanguageService {\r\n  languages$: Observable<LanguageInfo[]> = this.configState.getDeep$('localization.languages');\r\n\r\n  constructor(\r\n    private configState: ConfigStateService,\r\n    private languageService: LanguageService,\r\n    private sessionState: SessionStateService,\r\n  ) {}\r\n\r\n  subscribeLanguage() {\r\n    this.languages$.pipe(filter<LanguageInfo[]>(Boolean)).subscribe(langs => {\r\n      this.languageService.init(langs.map(this.mapLang));\r\n    });\r\n\r\n    this.languageService.selectedLanguage$\r\n      .pipe(filter<LanguageInfo | undefined>(Boolean))\r\n      .subscribe(lang => {\r\n        this.sessionState.setLanguage(lang?.cultureName || '');\r\n      });\r\n  }\r\n\r\n  private mapLang = (lang: LanguageInfo): LpxLanguage => {\r\n    return {\r\n      cultureName: lang.cultureName,\r\n      displayName: lang.displayName || '',\r\n      selected: this.sessionState.getLanguage() === lang.cultureName,\r\n      isRTL:  getLocaleDirection(lang.cultureName) === 'rtl',\r\n    };\r\n  };\r\n}\r\n","import { APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { AbpLanguageService } from '../services/language.service';\r\n\r\nexport const LPX_LANGUAGE_PROVIDER = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  deps: [Injector],\r\n  useFactory: initLanguage,\r\n};\r\n\r\nfunction initLanguage(injector: Injector) {\r\n  const language = injector.get(AbpLanguageService);\r\n  return () => {\r\n    language.subscribeLanguage();\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalizationService } from '@abp/ng.core';\r\nimport { TranslateService } from '@volo/ngx-lepton-x.core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AbpTranslateService implements TranslateService {\r\n  constructor(private localization: LocalizationService) {}\r\n\r\n  get(key: string, defaultValue: string | undefined): string {\r\n    const keyToTranslate = this.getKey(key);\r\n    if (keyToTranslate) {\r\n      return this.localization.instant({\r\n        key: keyToTranslate,\r\n        defaultValue,\r\n      });\r\n    }\r\n\r\n    return defaultValue || key;\r\n  }\r\n\r\n  get$(key: string, defaultValue: string | undefined): Observable<string> {\r\n    const keyToTranslate = this.getKey(key);\r\n    if (keyToTranslate) {\r\n      return this.localization.get({\r\n        key: keyToTranslate,\r\n        defaultValue,\r\n      });\r\n    }\r\n\r\n    return of(defaultValue || key);\r\n  }\r\n\r\n  private getKey(key: string): string | undefined {\r\n    return key.includes('::') ? key : undefined;\r\n  }\r\n}\r\n","import { Provider } from '@angular/core';\r\nimport { LPX_TRANSLATE_SERVICE_TOKEN } from '@volo/ngx-lepton-x.core';\r\nimport { AbpTranslateService } from '../services/translate.service';\r\n\r\nexport const LPX_TRANSLATE_PROVIDER: Provider = {\r\n  provide: LPX_TRANSLATE_SERVICE_TOKEN,\r\n  useClass: AbpTranslateService,\r\n};\r\n","export enum eUserMenuItems {\r\n  MyAccount = 'MyAccount',\r\n  Logout = 'Logout',\r\n}\r\n","import { AuthService, NAVIGATE_TO_MANAGE_PROFILE } from '@abp/ng.core';\r\nimport { UserMenuService } from '@abp/ng.theme.shared';\r\nimport { APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { eUserMenuItems } from '../enums/user-menu-items';\r\n\r\nexport const LEPTON_X_USER_MENU_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureUserMenu,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureUserMenu(injector: Injector) {\r\n  const userMenu = injector.get(UserMenuService);\r\n  const authService = injector.get(AuthService);\r\n  const navigateToManageProfile = injector.get(NAVIGATE_TO_MANAGE_PROFILE);\r\n  return () => {\r\n    userMenu.addItems([\r\n      {\r\n        id: eUserMenuItems.MyAccount,\r\n        order: 100,\r\n        textTemplate: {\r\n          text: 'AbpAccount::MyAccount',\r\n        },\r\n        action: () => navigateToManageProfile(),\r\n      },\r\n      {\r\n        id: eUserMenuItems.Logout,\r\n        order: 100,\r\n        textTemplate: {\r\n          text: 'AbpUi::Logout',\r\n        },\r\n        action: () => authService.logout().subscribe(),\r\n      },\r\n    ]);\r\n  };\r\n}\r\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\r\nimport { LpxStyles } from '@volo/ngx-lepton-x.core';\r\nimport { LpxModule, LpxOptions } from '@volo/ngx-lepton-x.lite';\r\nimport { ValidationErrorModule } from './components/validation-error';\r\nimport { LPX_USER_PROVIDER } from './providers/user.provider';\r\nimport { LPX_LANGUAGE_PROVIDER } from './providers/language.provider';\r\nimport { LPX_TRANSLATE_PROVIDER } from './providers/translate.provider';\r\nimport { LEPTON_X_USER_MENU_PROVIDERS } from './providers/user-menu-service.provider';\r\nimport { LeptonXAbpCoreModule } from '@volo/abp.ng.lepton-x.core';\r\n\r\nexport type ThemeLeptonXModuleOptions = LpxOptions;\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [LpxModule, ValidationErrorModule],\r\n  exports: [],\r\n})\r\nexport class ThemeLeptonXModule {\r\n  static forRoot(\r\n    options?: ThemeLeptonXModuleOptions\r\n  ): ModuleWithProviders<ThemeLeptonXModule> {\r\n    return {\r\n      ngModule: ThemeLeptonXModule,\r\n      providers: [\r\n        LpxModule.forRoot(createLpxModuleOptions(options))\r\n          .providers as Provider,\r\n        ValidationErrorModule.forRoot().providers as Provider,\r\n        LPX_USER_PROVIDER,\r\n        LPX_LANGUAGE_PROVIDER,\r\n        LPX_TRANSLATE_PROVIDER,\r\n        LEPTON_X_USER_MENU_PROVIDERS,\r\n        LeptonXAbpCoreModule.forRoot().providers as Provider,\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\nfunction createLpxModuleOptions(options?: ThemeLeptonXModuleOptions) {\r\n  return {\r\n    ...options,\r\n    styleFactory: (styles: LpxStyles) => {\r\n      styles.push({\r\n        bundleName: 'abp-bundle',\r\n      });\r\n      if (options?.styleFactory) {\r\n        return options.styleFactory(styles);\r\n      }\r\n      return styles;\r\n    },\r\n  };\r\n}\r\n","/*\r\n * Public API Surface of theme-lepton-x\r\n */\r\nexport * from './lib/theme-lepton-x.module';\r\nexport * from './lib/components/index';\r\nexport * from './lib/services/index';\r\nexport * from './lib/enums/index';\r\nexport * from './lib/providers/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ErrorComponent","i2","i1"],"mappings":"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"}
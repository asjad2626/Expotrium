import { Component, Inject } from '@angular/core';
import { EXTENSIONS_FORM_PROP, FormProp, EXTENSIBLE_FORM_VIEW_PROVIDER, } from '@abp/ng.theme.shared/extensions';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@ngx-validate/core";
import * as i3 from "@abp/ng.core";
import * as i4 from "@abp/ng.theme.shared/extensions";
export class PersonalSettingsHalfRowComponent {
    constructor(propData) {
        this.propData = propData;
        this.displayName = propData.displayName;
        this.name = propData.name;
        this.id = propData.id;
    }
}
PersonalSettingsHalfRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: PersonalSettingsHalfRowComponent, deps: [{ token: EXTENSIONS_FORM_PROP }], target: i0.ɵɵFactoryTarget.Component });
PersonalSettingsHalfRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: PersonalSettingsHalfRowComponent, selector: "abp-personal-settings-half-row", ngImport: i0, template: ` <div class="w-50 d-inline">
    <div class="mb-3">
      <label [attr.for]="name" class="form-label">{{ displayName | abpLocalization }} </label>
      <input
        type="text"
        [attr.id]="id"
        class="form-control"
        [attr.name]="name"
        [formControlName]="name"
      />
    </div>
  </div>`, isInline: true, dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2.ValidationDirective, selector: "[formControl],[formControlName]", exportAs: ["validationDirective"] }, { kind: "pipe", type: i3.LocalizationPipe, name: "abpLocalization" }], viewProviders: [EXTENSIBLE_FORM_VIEW_PROVIDER] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: PersonalSettingsHalfRowComponent, decorators: [{
            type: Component,
            args: [{ selector: 'abp-personal-settings-half-row', template: ` <div class="w-50 d-inline">
    <div class="mb-3">
      <label [attr.for]="name" class="form-label">{{ displayName | abpLocalization }} </label>
      <input
        type="text"
        [attr.id]="id"
        class="form-control"
        [attr.name]="name"
        [formControlName]="name"
      />
    </div>
  </div>`, viewProviders: [EXTENSIBLE_FORM_VIEW_PROVIDER] }]
        }], ctorParameters: function () { return [{ type: i4.FormProp, decorators: [{
                    type: Inject,
                    args: [EXTENSIONS_FORM_PROP]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uYWwtc2V0dGluZ3MtaGFsZi1yb3cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYWNjb3VudC9zcmMvbGliL2NvbXBvbmVudHMvcGVyc29uYWwtc2V0dGluZ3MvcGVyc29uYWwtc2V0dGluZ3MtaGFsZi1yb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFDTCxvQkFBb0IsRUFDcEIsUUFBUSxFQUNSLDZCQUE2QixHQUM5QixNQUFNLGlDQUFpQyxDQUFDOzs7Ozs7QUFvQnpDLE1BQU0sT0FBTyxnQ0FBZ0M7SUFNM0MsWUFBa0QsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsRSxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN4QixDQUFDOzs2SEFWVSxnQ0FBZ0Msa0JBTXZCLG9CQUFvQjtpSEFON0IsZ0NBQWdDLHNFQWZqQzs7Ozs7Ozs7Ozs7U0FXSCxveEJBRVEsQ0FBQyw2QkFBNkIsQ0FBQzsyRkFFbkMsZ0NBQWdDO2tCQWpCNUMsU0FBUzsrQkFDRSxnQ0FBZ0MsWUFDaEM7Ozs7Ozs7Ozs7O1NBV0gsaUJBRVEsQ0FBQyw2QkFBNkIsQ0FBQzs7MEJBUWpDLE1BQU07MkJBQUMsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBFWFRFTlNJT05TX0ZPUk1fUFJPUCxcclxuICBGb3JtUHJvcCxcclxuICBFWFRFTlNJQkxFX0ZPUk1fVklFV19QUk9WSURFUixcclxufSBmcm9tICdAYWJwL25nLnRoZW1lLnNoYXJlZC9leHRlbnNpb25zJztcclxuaW1wb3J0IHsgVW50eXBlZEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYWJwLXBlcnNvbmFsLXNldHRpbmdzLWhhbGYtcm93JyxcclxuICB0ZW1wbGF0ZTogYCA8ZGl2IGNsYXNzPVwidy01MCBkLWlubGluZVwiPlxyXG4gICAgPGRpdiBjbGFzcz1cIm1iLTNcIj5cclxuICAgICAgPGxhYmVsIFthdHRyLmZvcl09XCJuYW1lXCIgY2xhc3M9XCJmb3JtLWxhYmVsXCI+e3sgZGlzcGxheU5hbWUgfCBhYnBMb2NhbGl6YXRpb24gfX0gPC9sYWJlbD5cclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgIFthdHRyLmlkXT1cImlkXCJcclxuICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXHJcbiAgICAgICAgW2F0dHIubmFtZV09XCJuYW1lXCJcclxuICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cIm5hbWVcIlxyXG4gICAgICAvPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+YCxcclxuICBzdHlsZXM6IFtdLFxyXG4gIHZpZXdQcm92aWRlcnM6IFtFWFRFTlNJQkxFX0ZPUk1fVklFV19QUk9WSURFUl0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQZXJzb25hbFNldHRpbmdzSGFsZlJvd0NvbXBvbmVudCB7XHJcbiAgcHVibGljIGRpc3BsYXlOYW1lOiBzdHJpbmc7XHJcbiAgcHVibGljIG5hbWU6IHN0cmluZztcclxuICBwdWJsaWMgaWQ6IHN0cmluZztcclxuICBwdWJsaWMgZm9ybUdyb3VwOiBVbnR5cGVkRm9ybUdyb3VwO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASW5qZWN0KEVYVEVOU0lPTlNfRk9STV9QUk9QKSBwcml2YXRlIHByb3BEYXRhOiBGb3JtUHJvcCkge1xyXG4gICAgdGhpcy5kaXNwbGF5TmFtZSA9IHByb3BEYXRhLmRpc3BsYXlOYW1lO1xyXG4gICAgdGhpcy5uYW1lID0gcHJvcERhdGEubmFtZTtcclxuICAgIHRoaXMuaWQgPSBwcm9wRGF0YS5pZDtcclxuICB9XHJcbn1cclxuIl19